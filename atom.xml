<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>柊野的博客</title>
  
  
  <link href="https://zhongye1.github.io/atom.xml" rel="self"/>
  
  <link href="https://zhongye1.github.io/"/>
  <updated>2025-07-10T14:43:22.116Z</updated>
  <id>https://zhongye1.github.io/</id>
  
  <author>
    <name>柊野</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>七月</title>
    <link href="https://zhongye1.github.io/posts/70b4c021.html"/>
    <id>https://zhongye1.github.io/posts/70b4c021.html</id>
    <published>2025-07-10T14:04:32.000Z</published>
    <updated>2025-07-10T14:43:22.116Z</updated>
    
    <content type="html"><![CDATA[<hr><pre><code>              2025/7/10  22:04:39              今年已经过去了：              191 天 22 小时 4 分钟 39 秒              今年已经过去了 52.5807945%              Without you here again.</code></pre><p>可能只是单纯的抑郁</p><p>一学期下来博客断更了三个月</p><br><p>压抑的我写不动</p><p>压抑的我不写也不行</p><p><br><br><br></p><p>然后呢，在大二暑假来临的时候这些东西纷纷涌了上来，我知道我再也受不住了必须得把这些写下去</p><p>因为空白的这些日子里我也不知道我在做什么</p><p><br><br><br></p><p>有时候面对这些我经常在想，</p><p>难道这就是我们的世界而这世界本该如此吗，不应该这样的</p><p>最后呢还是像现在这样</p><p><br><br><br></p><p>我小的时候没什么梦想</p><p>看见路边开大运的也想以后开大运</p><p>如果我上大专的话估计直接认了去干这行了</p><p>但现在是在一个不上不下的本科读书，这肯定不会就这么认了</p><p><br><br><br></p><p>这般现状</p><p>即使走了这么远</p><p>走了这么久</p><p>最后解释起来还不是在最后只能说是不够努力导致的</p><p>累死就好了</p><p><br><br><br></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=3&id=2537745170&auto=0&height=66"></iframe><p><br><br><br></p><p>过去的日子不会再有机会回去了</p><p>难道这就是我们的世界而这世界本该如此吗</p><p>我没头绪，但这不应该是这样的</p><p><br><br><br></p><p>至少这些还要继续下去</p><p>无论好的也罢坏的也罢</p><p>最后我也写不出什么</p><p>这天的日志只能寄愿自己不要过的太过悲伤</p><p><br><br><br></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">除了一场初秋的泪雨</span><br><span class="line">能省的，都要省下来</span><br><span class="line">物质要省下来，金钱要省下</span><br><span class="line">绝望要省下来，悲伤要省下来</span><br><span class="line">孤独要省下来，寂寞要省下来</span><br><span class="line">亲情友情爱情都要省下来</span><br><span class="line">把这些通通省下来</span><br><span class="line">用于往后贫穷的生活</span><br><span class="line">明天除了重复什么都没有</span><br><span class="line">远方除了贫穷还是贫穷</span><br><span class="line">所以你没有理由奢侈，一切都要省下来</span><br><span class="line">皮肤你要省下来，血液你要省下来</span><br><span class="line">细胞你要省下来，骨头你要省下来</span><br><span class="line">不要说你再没有可省的东西了</span><br><span class="line">至少你还有你，可以省下来</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2011.9.1</span><br><span class="line">作者</span><br><span class="line">许立志</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">怎会如此</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>2024一些笔记（概率论）</title>
    <link href="https://zhongye1.github.io/posts/ec1ceb96.html"/>
    <id>https://zhongye1.github.io/posts/ec1ceb96.html</id>
    <published>2025-03-09T14:51:00.000Z</published>
    <updated>2025-03-31T07:09:59.088Z</updated>
    
    <content type="html"><![CDATA[<p>2024的一些笔记（概率论）（共18张）</p><hr><p><img src="https://pica.zhimg.com/80/v2-04d0311fa8c90603ec9b304c1c5f7636_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-861ad585ca6cda1a5e4c42840b262cb4_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-0f6fca5c26fc8711bb543e61aa8522fa_720w.webp" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-e4e0ed6e607a63b2c6c31791940bf46d_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-1f1588fd58cd94201e4d9ddd313f0434_720w.webp" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-fb9eab8d8a0adcf4585a88a641ffc025_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-25339614d611ab591671535ed41fb2fc_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-fa021e9b5f501d077ae6125f236b4a46_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-32bb1caff36b8b966294cf1171fed8ee_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-8a7b0c0991dc2f527a83d10b197851b8_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-c9f94c7e04aad4d8ad1d22583c0d593b_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-8459499e17ee5f58790bcef4663469fc_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-7984fb0d9806e3bd9077e4a4bca05f58_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-64700ff148e27b071eb152eaf84a9160_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-d8677ce9ccb42b4672c03aaf9d527be8_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-863fd9f5b3f09b17de45172a4b7466da_720w.webp" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-ec9691e917fe807ab7db12fcdb6c21b5_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-4aca80833c2cf44b48d5767ea940c197_720w.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">抽空整理的一些</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="概率论" scheme="https://zhongye1.github.io/tags/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>2024一些笔记（常微分）</title>
    <link href="https://zhongye1.github.io/posts/a12f4d8d.html"/>
    <id>https://zhongye1.github.io/posts/a12f4d8d.html</id>
    <published>2025-03-09T14:51:00.000Z</published>
    <updated>2025-03-31T07:09:08.406Z</updated>
    
    <content type="html"><![CDATA[<p>2024的一些笔记（常微分）（共20张）</p><p><img src="https://picx.zhimg.com/80/v2-46b61367748a0b9ca84ad8e77800887f_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-bff8d14c462a0bc3c12ab228b3738c28_720w.webp" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-72f2d63ff8c1e8897791c961ceb9fce5_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-55bbe4dbab38a31b64c54120d720fbfd_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-28eb6637c83c134d95626532f0811970_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-d7f8da6dbf19f664c75bcf0af2e421aa_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-09e62700abf7a00e674ccf9e2871eaa9_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-0711f3581b0d3da93f373e6ae671528d_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-1d8db7dd9bfe18f1a88a6554ac54a2d6_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-1f9b72a957cc336f2723f5e5b1200c3f_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-dae1d6757d38da31d0268806b0d8671b_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-d7a44ef4db3aecd61ac7703db973e3e6_720w.webp" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-8f264542c42648239218b08f2d2a3147_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-62154c0fa582d94c3f19afa13a39914d_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-2186401cfa936f05461fd316b74d521e_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-68efd565744e3aa4f07bebded81d5f1b_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-e0d6d5588780012eaa9be2efb9820826_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-6e20a5989b7616decf7100d284f7c1cf_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-eda6b00705f475fe29811605e5504a3e_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-e1ccc9db6bf01835178384d0b01493b2_720w.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">另外抽空整理的一些</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="常微分" scheme="https://zhongye1.github.io/tags/%E5%B8%B8%E5%BE%AE%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>三月</title>
    <link href="https://zhongye1.github.io/posts/1f092045.html"/>
    <id>https://zhongye1.github.io/posts/1f092045.html</id>
    <published>2025-03-05T11:17:28.000Z</published>
    <updated>2025-04-05T05:49:39.527Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>3月1日</p></div><p>无所事事</p><p>遂搭公交车前往黄埔</p><img src="https://pica.zhimg.com/80/v2-aee1566f545ce5063270920a77423c1a_720w.webp" alt="珠江" style="zoom: 80%;" /><img src="https://pic1.zhimg.com/80/v2-d4ede8d66e88fee59f5439db7a625638_720w.webp" alt="风吹花遍野" style="zoom: 80%;" /><p>上次看到这么大片的油菜花还是在湖北</p><p>等天气好了找个时间再来看看</p><hr><div class="tip "><p>3月2日</p></div><p><img src="https://pic3.zhimg.com/v2-59e4679ba11c333dde41264d44dc72e6_r.jpg" alt="img"></p><p>搭校园论坛</p><p>薅的导师服务器</p><p>反正没干正事</p><hr><div class="tip "><p>3月3日</p></div><p>部署了校园论坛  <a href="https://www.gzhu.site/">GZHU聊天室</a></p><p><img src="https://picx.zhimg.com/80/v2-c9bcbf63a196771749cb34c8a2b55afc_720w.png" alt="img"></p><p>网站开源的一套部署下来</p><p>无非前端npm run build 编译页面后端pm2运行然后搞nginx配置再弄个配置ssl配置后端配置什么的有点头疼，被websocket的问题卡了一会</p><p>这个论坛呢无非凉了或者火了被导师发现薅服务器羊毛被rm -rf反正域名薅的服务器也是薅的成本接近为0，只参与部署没碰开发算法逻辑打算同校找开发同行加入别人开发团队别人问技术实现什么的也答不上来然后被祝你幸福晚上瞎捣鼓熬夜白天又犯困做梦被数据结构追最后早八上第二天课然后论坛什么的拉点人来活跃了几天就凉在之后没人记得了</p><p>开发什么的还是得学</p><p>要头疼的事情太多了，而且大学教的东西太少，开发这块更少</p><p>还得靠自己</p><hr><div class="tip "><p>3月4日</p></div><p>至少研究那么久跟老师做的项目有头绪了，算是搞完了一个阶段</p><p><img src="https://free-img.400040.xyz/4/2025/03/05/67c837eda9f86.png" alt=""></p><p>晚上刷力扣</p><p>怀疑上学期学了个假的python，第二题就做不出来上学期怎么期末八十多的</p><p>还要练，到时候整理个笔记</p><p>大一没好好学数据结构算法给自己挖的坑还得填</p><img src="https://pic3.zhimg.com/v2-328d1bace5c950f3f8c43bf2a673e92a_r.jpg" alt="换了个vscode的背景，感觉还不错" /><hr><div class="tip "><p>3月5日</p></div><p>广东还有倒春寒的…</p><p>反正下午哪都不想去</p><p>这种天气就适合睡觉的说</p><p><img src="https://pica.zhimg.com/v2-184c8aa33e27ba80adae5ec2d6304b34_r.jpg" alt="img"></p><p>傍晚码博客</p><p>该摸鱼时就摸鱼</p><p>明天没早八</p><img src="https://pic4.zhimg.com/v2-498106da16031349355ee7fd2c87bed3_r.jpg" alt="img" style="zoom: 25%;" /><hr><div class="tip "><p>3月8日</p></div><p>被导师的新需求吓晕</p><p>还以为本科跟项目没啥问题</p><p>怎么要求越来越离谱（晕</p><p>问题是都还要学的太多了</p><hr><div class="tip "><p>3月9日</p></div><p>闲来无事整理笔记</p><p>又水了几篇博客</p><p><a href="https://zhongye1.github.io/posts/a12f4d8d.html">https://zhongye1.github.io/posts/a12f4d8d.html</a></p><p>（概率论<br><a href="https://zhongye1.github.io/posts/ec1ceb96.html">https://zhongye1.github.io/posts/ec1ceb96.html</a></p><p>（常微分</p><p>这周末约等于摆烂</p><p>下周末最好跑掉，受不了二手烟</p><hr><p>最近发生挺多事，感觉现状不理想，以后也难办</p><p>有一种把路走死了的感觉</p><p>也不见得能回2023把自己揍一顿</p><p>反正我想如果当初有机会的话现在会不会在那个校园能接触更多开发同好和交流资源什么的，还能有一堆开源社群或者linux user group之类的同好</p><p>而不是学校里周围一堆现充天天奶茶团建loopy表情包或者抽烟深情电竞窝宿舍高手</p><p>为什么我在大学的人脉连几个上得了github的都拉不到</p><p>我真感觉我把路走死了</p><p>之后也难办</p><p>努力搞出去罢</p><p>我真的服了看我不把这些破事凹死</p><p>我还不信了，妈的</p><hr><p>最近回暖了</p><p>春夏秋冬</p><p>这些是不是还会再来一轮</p><p>可惜往后的一年压力会不会更大还说不定</p><p>感觉2024还没过完就是2025了</p><p>然而之前的许多我还是放不下</p><p>第一年一塌糊涂真的是</p><p>然后第二年也一堆事</p><p>第三年第四年呢</p><p>为什么就感觉周围的生活没有光</p><p>为啥是去南漂，一年就老家最没机会回去</p><p>为啥刚好在高考出意外，直接跑到一个填志愿时才知道的地方读书？</p><p>为啥周围人刚好是自己的人际关系一塌糊涂，烂到一个能拉上开发的都没</p><p>为啥刚好在自己面临这些时周围刚好缺资源自己缺技术学校缺环境</p><p>怎么这些事情就直接直接挨到我头上了</p><p>怎么偏偏就是这样能把路给走死了</p><p>天天焦虑结果啥都干不成然后又废掉两天</p><br><br><p>反正这个博客被三大运营商墙了别人看不到</p><p>发牢骚也没人看了，好极了</p><br><br><blockquote><p>假如说这些问题一直放在这里无法解决，那怎么办呢，那它会解决吗</p></blockquote><p>所以这就让人头疼了</p><p>不管是认输还是一头撞死在上面问题还是没有改变</p><p>草了，真够麻烦的</p><br><br><p>过一段时间后这些也不太可能有人记得</p><p>把什么东西保存下来的话</p><p>其实会很难的吧</p><br><br><p>熬不了夜先睡了</p><p>我一想也许我整理笔记到博客也不太会是因为闲来无事</p><hr><div class="tip "><p>3月10日</p></div><p>所以说今天睡了一下午</p><p>啥都没干啊（恼</p><p>明天得做点事了</p><img src="https://free-img.400040.xyz/4/2025/03/11/67cf15b7d99e4.png" style="zoom:50%;" /><hr><div class="tip "><p>3月11日</p></div><p>想在学校组一个开源组织，搭个论坛和镜像站什么的</p><p>不过怕实力不够搞不起来（悲）</p><hr><div class="tip "><p>3月13日</p></div><p>写网页</p><p><img src="https://picx.zhimg.com/80/v2-c7ceb44de3657d229dcff572ec44fbf5_1440w.webp" alt="img"></p><p>翻论坛</p><p><img src="https://pic2.zhimg.com/80/v2-e9f040672858223b6ac9582755acfbcb_1440w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-b38e6fe9e075ff9d302509e8ed82d10c_1440w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-9d5838b8f53bdda7c1ef071f2e767833_1440w.webp" alt="img"></p><hr><div class="tip "><p>3月15日</p></div><p>写完基础网页然后写中心度查询</p><p><img src="https://pic1.zhimg.com/80/v2-bedf1e76f213ec1606a7e0febf4cc354_1440w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-4391eb8b3befb3330d7e3d38b424d4e1_720w.jpg?source=d16d100b" alt="img"></p><p>上一周课燃尽了这学期还喜提单休</p><p><img src="https://pica.zhimg.com/80/v2-66eb7ee3ae9d683bc9a9da945d46c076_1440w.webp" alt="img"></p><center>导师画的网页设计图</center><hr><div class="tip "><p>3月16日</p></div><p><img src="https://picx.zhimg.com/v2-5f35b70f143d576285a50c7169d6e981_r.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-2d64d13ac3b6de0f45cba2bfa3a744b3_r.jpg" alt="img"></p><p><img src="https://pica.zhimg.com/v2-e7bb9e4f27ab3d6427c50ff5152f27f4_r.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-a9b9271683fd0e26bc4dae822bf8e548_r.jpg" alt="img"></p><p>周日前往珠江出海口看海</p><p>广州也有自己的江之岛</p><p>就是交通不太方便</p><p>晚上搞完网页了，建了个仓库</p><div style="background: #E9F4FE; border: 3px solid #e1e4e8; border-radius: 6px; padding: 16px; margin: 16px 0; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif;">    <a href="https://github.com/Zhongye1/neo4j-node-viewer" style="text-decoration: none; color: #0366d6;">        <h3 style="margin: 0 0 8px 0; font-size: 20px;">neo4j-node-viewer</h3>    </a>    <p style="margin: 0 0 12px 0; color: #586069; font-size: 14px;">        基于neovis.js的一个以太坊网络数据展示用前端    </p>    <div style="display: flex; align-items: center; font-size: 12px; color: #586069;">        <span style="margin-right: 16px;">📅 <strong>Updated</strong>: 2025-03-16</span>    </div>    <div style="margin-top: 8px;">        <span style="display: inline-block; background:rgb(90, 241, 196); color: #000; padding: 2px 6px; border-radius: 4px; font-size: 12px;">JavaScript</span>        <span style="display: inline-block; background:rgb(108, 168, 247); color: #fff; padding: 2px 6px; border-radius: 4px; margin-left: 4px; font-size: 12px;">Neo4j</span>        <span style="display: inline-block; background:rgb(179, 210, 240); color: #fff; padding: 2px 6px; border-radius: 4px; margin-left: 4px; font-size: 12px;">Neovis</span>        <span style="display: inline-block; background:rgb(116, 69, 255); color: #fff; padding: 2px 6px; border-radius: 4px; margin-left: 4px; font-size: 12px;">WebSocket</span>    </div></div><hr><div class="tip "><p>3月19日</p></div><p>又鸽了几天</p><p>开学快一个月了好像还是没做什么</p><p>网页源码给导师后也没啥消息了，今天试着联系下</p><p>和博友讨论组织的事，结果是没搞头</p><p>当初去了广工就好了</p><p><img src="https://pic2.zhimg.com/v2-2c697d52d8d455bb842a81b03c4e5579_r.jpg" alt="img"></p><p>早就想到会这样，之前也问过别人，回复是说当前的学历不支持这些想法</p><p>我想这是不是太消极了一点，不过现在这个情况结果确实不意外</p><p>也许吧</p><p>至少自己要走出去</p><p>想了很多又删了，发牢骚没意思</p><p>不管怎么选择都会后悔的，然而我还是想回23年把做选择的自己干死</p><p>比把自己交代在这里会好点</p><hr><div class="tip "><p>3月27日</p></div><p>搭环境搞容器建集群</p><p>反正没搞定</p><p>反正就是大战命令行</p><hr><div class="tip "><p>3月28日</p></div><p>入夏几天后回寒</p><p>这段时间事情太多</p><p>然后之后也难搞</p><hr><p>夜降温下雨，下晚课后想去江边走走</p><p>不过没吃晚饭，遂放弃</p><p>这周末也有挺多事要做，至少抽出时间来去江边走一趟</p><p>关于未来</p><p>没想法，能力不够，还得学</p><p>反正焦虑不能当饭吃，该刷的还要刷</p><p>之后怎么说，难搞</p><p>以后可能考研或者找工作还是什么地方也说不定</p><p>不知道会不会很惨，反正打死不干销售</p><p>在这天的最后一段时间，遂想到</p><p>也许平等不会像现在这样分三六九等</p><p>但总所周知的，现在这样的，</p><p>也做不出什么。</p><p>经常犯困，还是早点睡吧</p><p>啊，周末事情也好多</p><p>其实经常熬夜是因为白天时间留给自己支配的没有多少</p><p>估计等我扛不住了这个恶习才能改</p><p>每次都这样</p><hr><p>这些想法，谁会在意呢</p><p>反正也不太可能有人找到这里来</p><p>也不知道以后自己看到这些会怎么想</p><p>在这些日子里拼尽全力无论如何呐喊也没人会听到这些故事</p><p>若是不记下来的话自己也会遗忘</p><p>关于以后，遥遥无期了</p><p>至少，离去的日子里不要太悲伤</p><img src="https://picx.zhimg.com/80/v2-bb8c7a254caea82b30a4b0b432ff4aed_1440w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>3月31日</p></div><p>31号了，那么三月也是过完了</p><p>月底在珠江边走了一趟</p><p>这几天来寒潮，天气挺冷，</p><p>想到过几天回暖入夏又有些伤感</p><p>也是，就是到四月了</p><p>于是又要开个帖来讲述这些日子里的无聊生活以及牢骚</p><p>斯人已去，剩下的这个四月又会有什么呢</p><p>再看吧</p><p>活在当下是最难</p>]]></content>
    
    
    <summary type="html">我上学期学了个假Python力扣题做不出来</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>博客杂谈</title>
    <link href="https://zhongye1.github.io/posts/d0c1604e.html"/>
    <id>https://zhongye1.github.io/posts/d0c1604e.html</id>
    <published>2025-03-01T08:03:18.000Z</published>
    <updated>2025-03-05T12:37:10.629Z</updated>
    
    <content type="html"><![CDATA[<p>我：</p><p>请模仿网上的喷子讽刺一下现在还在写博客的人，力度大些。</p><p>DeepSeek：</p><p>哎呀，2023年了居然还有人坚持写独立博客？您是不是从Web1.0时代穿越过来的啊？每天看着那十几个阅读量自我陶醉，难道真有人认为在CSDN、简书、公众号之外搞个WordPress就叫独立思考了吗？😅 折腾半天用Markdown排版，结果文章没人看，连百度SEO都搞不定。不会还在用RSS订阅这种老古董吧？🤣</p><p>再看看您那博客主题，不是模仿Hacker News就是抄袭Medium，配个廉价的二次元头像装文艺青年。写篇博客憋了三天才挤出五百字，最后评论区就两条“模板不错，求分享”，还嘴硬说这是知识沉淀。最搞笑的是整天喊着“去中心化”，结果域名续费还得找马云🤣，服务器还经常被墙，说好的对抗流量霸权呢？最后不还是得把文章截图发朋友圈求点赞？建议直接申请文化遗产，名字就叫《中文互联网最后的庇护所》，毕竟再过五年这些赛博坟场都没人愿意挖了！😅</p><hr><p><img src="https://free-img.400040.xyz/4/2025/03/01/67c2d1e3944eb.png" alt=""></p>]]></content>
    
    
    <summary type="html">DeepSeek锐评博客写作</summary>
    
    
    
    
    <category term="杂谈" scheme="https://zhongye1.github.io/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>教务处课表爬虫</title>
    <link href="https://zhongye1.github.io/posts/3d7a15bf.html"/>
    <id>https://zhongye1.github.io/posts/3d7a15bf.html</id>
    <published>2025-03-01T06:55:48.000Z</published>
    <updated>2025-03-01T07:39:35.036Z</updated>
    
    <content type="html"><![CDATA[<p><em>大二上在学python，所以想要用python实现一下课表爬取。</em></p><p><em>（虽然python开课爬虫不怎么讲的都</em></p><p><em>本文仅供学习使用。</em></p><h1>广州大学课程信息查询脚本</h1><h2 id="1-概述">1. 概述</h2><p>本脚本用于自动化登录广州大学教务系统，获取当前学期课程信息，主要功能包括：</p><ul><li>通过浏览器自动化（Selenium）模拟用户登录，绕过滑块验证。</li><li>使用获取的Cookie通过<code>requests</code>库发送API请求，获取课程数据。</li><li>结构化处理课程信息，并导出为JSON和CSV格式文件。</li></ul><hr><h2 id="2-环境依赖">2. 环境依赖</h2><h3 id="2-1-运行环境">2.1 运行环境</h3><ul><li><p><strong>Python 3.7+</strong></p></li><li><p>依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install selenium requests pandas</span><br></pre></td></tr></table></figure></li></ul><h3 id="2-2-配置">2.2 配置</h3><ul><li>手动输入学号密码（脚本运行时会提示），查询时段的配置请求参数</li><li>后期待完善（</li></ul><hr><h2 id="3-功能模块">3. 功能模块</h2><h3 id="3-1-登录模块">3.1 登录模块</h3><h4 id="功能描述">功能描述</h4><ul><li>通过Selenium启动浏览器，访问教务系统登录页面。</li><li>自动填充学号、密码，并绕过滑块验证。</li><li>判断登录状态，成功后保存Cookie供后续请求使用。</li></ul><h4 id="输入参数">输入参数</h4><ul><li>学号（<code>login_username</code>）</li><li>密码（<code>login_password</code>）</li></ul><h4 id="关键逻辑">关键逻辑</h4><ul><li><strong>浏览器配置</strong>：禁用自动化检测标志（<code>excludeSwitches: ['enable-automation']</code>），防止被识别为爬虫。</li><li><strong>滑块验证绕过</strong>：通过执行JavaScript代码<code>navigator.webdriver = false</code>。</li><li><strong>登录状态检查</strong>：通过页面元素或关键词（如<code>登录成功</code>）判断是否登录成功。</li></ul><hr><h3 id="3-2-课程数据获取模块">3.2 课程数据获取模块</h3><h4 id="功能描述-2">功能描述</h4><ul><li><p>使用<code>requests</code>库发送POST请求，携带登录后的Cookie和参数，获取课程数据。</p></li><li><p>数据接口：<code>http://jwxt.gzhu.edu.cn/jwglxt/kbcx/xskbcx_cxXsgrkb.html</code>（F12大法</p><p><img src="https://free-img.400040.xyz/4/2025/03/01/67c2b8ec8a7cc.png" alt=""></p><p><img src="https://free-img.400040.xyz/4/2025/03/01/67c2b96c96a63.png" alt=""></p></li></ul><h4 id="请求参数">请求参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;xnm&quot;</span>: <span class="string">&quot;2024&quot;</span>,     <span class="comment"># 学年（2024表示2023-2024学年）</span></span><br><span class="line">    <span class="string">&quot;kzlx&quot;</span>: <span class="string">&quot;ck&quot;</span>,      <span class="comment"># 查询类型（ck=查看）</span></span><br><span class="line">    <span class="string">&quot;xsdm&quot;</span>: <span class="string">&quot;&quot;</span>,        <span class="comment"># 学生代码（留空）</span></span><br><span class="line">    <span class="string">&quot;xqm&quot;</span>: <span class="string">&quot;3&quot;</span>         <span class="comment"># 学期码（3表示秋季学期）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="请求头（Headers）">请求头（Headers）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 ...&quot;</span>,  <span class="comment"># 模拟浏览器请求</span></span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://jwxt.gzhu.edu.cn/...&quot;</span>,  <span class="comment"># 来源页面</span></span><br><span class="line">    <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span>       <span class="comment"># 标识AJAX请求</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="3-3-数据处理与导出模块">3.3 数据处理与导出模块</h3><h4 id="功能描述-3">功能描述</h4><ol><li><p><strong>JSON数据处理</strong></p><ul><li>从原始响应中提取关键字段（如课程名称<code>kcmc</code>、教室<code>cdmc</code>、节次<code>jc</code>）。</li><li>映射星期代码（<code>xqjmcMap</code>）为中文（如<code>1 → 周一</code>）。</li><li>保存结构化的JSON文件（<code>extracted_courses.json</code>）。</li></ul></li><li><p><strong>CSV导出</strong></p><ul><li><p>使用<code>pandas</code>将JSON数据转换为表格形式。</p></li><li><p>添加中文表头（如“课程名称”、“教室”）。</p></li><li><p>导出为CSV文件（<code>courses.csv</code>），兼容Excel打开。</p><img src="https://free-img.400040.xyz/4/2025/03/01/67c2b36edf98c.png" style="zoom:50%;" /></li></ul></li></ol><h4 id="字段映射表">字段映射表</h4><table><thead><tr><th style="text-align:center">原始字段</th><th style="text-align:center">中文表头</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>kcmc</code></td><td style="text-align:center">课程名称</td><td style="text-align:center">课程全称</td></tr><tr><td style="text-align:center"><code>cdmc</code></td><td style="text-align:center">教室</td><td style="text-align:center">上课地点</td></tr><tr><td style="text-align:center"><code>jc</code></td><td style="text-align:center">节数</td><td style="text-align:center">课程节次（如1-2节）</td></tr><tr><td style="text-align:center"><code>xqjmc</code></td><td style="text-align:center">日期</td><td style="text-align:center">星期几（周一至日）</td></tr><tr><td style="text-align:center"><code>kcxszc</code></td><td style="text-align:center">课时安排</td><td style="text-align:center">周次范围（如1-16周）</td></tr></tbody></table><hr><h2 id="4-代码详解">4. 代码详解</h2><h3 id="4-1-登录流程">4.1 登录流程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 防止打开浏览器后闪退</span></span><br><span class="line">options = webdriver.ChromeOptions()</span><br><span class="line">options.add_experimental_option(<span class="string">&#x27;detach&#x27;</span>, <span class="literal">True</span>)</span><br><span class="line"><span class="comment"># options.add_argument(&#x27;--headless&#x27;)  # 无头模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开发者模式，防止被各大网站识别出来使用了Selenium</span></span><br><span class="line">options.add_experimental_option(<span class="string">&#x27;excludeSwitches&#x27;</span>, [<span class="string">&#x27;enable-automation&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动浏览器</span></span><br><span class="line">browser = webdriver.Chrome(options=options)</span><br><span class="line">browser.get(login_url)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绕过滑块验证</span></span><br><span class="line">browser.execute_script(<span class="string">&#x27;Object.defineProperties(navigator,&#123;webdriver:&#123;get:()=&gt;false&#125;&#125;)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找用户名和密码输入框所在元素</span></span><br><span class="line">username_input = browser.find_element(By.ID, <span class="string">&#x27;un&#x27;</span>)</span><br><span class="line">username_input.click()</span><br><span class="line">username_input.send_keys(login_username)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 等待响应</span></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入信息模拟登录</span></span><br><span class="line">password_input = browser.find_element(By.XPATH, <span class="string">&quot;//input[@name=&#x27;pd&#x27;]&quot;</span>)</span><br><span class="line">password_input.click()</span><br><span class="line">password_input.send_keys(login_password)</span><br><span class="line"></span><br><span class="line">login_button = browser.find_element(By.ID, <span class="string">&#x27;index_login_btn&#x27;</span>)</span><br><span class="line">login_button.click()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查登录是否成功</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;登录成功&#x27;</span> <span class="keyword">in</span> browser.page_source <span class="keyword">or</span> <span class="string">&#x27;index_login_btn&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> browser.page_source:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;登录成功&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;登录失败&quot;</span>)</span><br><span class="line"></span><br><span class="line">cookies = browser.get_cookies()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Cookies:&quot;</span>, cookies)</span><br><span class="line"></span><br><span class="line">cookie_dict = &#123;cookie[<span class="string">&#x27;name&#x27;</span>]: cookie[<span class="string">&#x27;value&#x27;</span>] <span class="keyword">for</span> cookie <span class="keyword">in</span> cookies&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭浏览器</span></span><br><span class="line">browser.quit()</span><br></pre></td></tr></table></figure><h3 id="4-2-数据请求">4.2 数据请求</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 请求头</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh-CN,zh;q=0.9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Length&quot;</span>: <span class="string">&quot;28&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded;charset=UTF-8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;jwxt.gzhu.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;http://jwxt.gzhu.edu.cn&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Referer&quot;</span>: <span class="string">&quot;http://jwxt.gzhu.edu.cn/jwglxt/kbcx/xskbcx_cxXskbcxIndex.html?gnmkdm=███████&amp;layout=default&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/███████ (Windows NT ███████; Win64; x64) AppleWebKit/███████ (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Requested-With&quot;</span>: <span class="string">&quot;XMLHttpRequest&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表单数据(学年和学期)</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;xnm&quot;</span>: <span class="string">&quot;2024&quot;</span>,</span><br><span class="line">    <span class="string">&quot;kzlx&quot;</span>: <span class="string">&quot;ck&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xsdm&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="string">&quot;xqm&quot;</span>: <span class="string">&quot;3&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">session = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> name, value <span class="keyword">in</span> cookie_dict.items():</span><br><span class="line">    session.cookies.<span class="built_in">set</span>(name, value)</span><br><span class="line"></span><br><span class="line"><span class="comment"># POST请求</span></span><br><span class="line">response = session.post(target_url, headers=headers, data=data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查请求是否成功</span></span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response_data = response.json()</span><br><span class="line">        formatted_data = json.dumps(response_data, indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;course_schedule.json&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(formatted_data)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;返回的数据已经保存至course_schedule.json&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;无法解析JSON数据&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;请求失败，状态码: <span class="subst">&#123;response.status_code&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="4-3-JSON数据处理">4.3 JSON数据处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提取字段并重构数据</span></span><br><span class="line">courses = []</span><br><span class="line"><span class="keyword">for</span> course <span class="keyword">in</span> data[<span class="string">&#x27;kbList&#x27;</span>]:</span><br><span class="line">    course_info = &#123;</span><br><span class="line">        <span class="string">&quot;课程名称&quot;</span>: course.get(<span class="string">&#x27;kcmc&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">        <span class="string">&quot;教室&quot;</span>: course.get(<span class="string">&#x27;cdmc&#x27;</span>, <span class="string">&#x27;&#x27;</span>),</span><br><span class="line">        <span class="comment"># ... 其他字段映射</span></span><br><span class="line">    &#125;</span><br><span class="line">    courses.append(course_info)</span><br></pre></td></tr></table></figure><h3 id="4-4-CSV导出逻辑">4.4 CSV导出逻辑</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用pandas转换并导出</span></span><br><span class="line">df = pd.DataFrame(courses)</span><br><span class="line">df.to_csv(<span class="string">&#x27;courses.csv&#x27;</span>, index=<span class="literal">False</span>, encoding=<span class="string">&#x27;utf-8-sig&#x27;</span>)  <span class="comment"># 兼容Excel中文编码</span></span><br></pre></td></tr></table></figure><h2 id=""></h2><ol><li><p><strong>滑块验证更新</strong>：若教务系统更新滑块验证逻辑，需调整JavaScript绕过代码。</p></li><li><p><strong>接口稳定性</strong>：课程查询接口（<code>xskbcx_cxXsgrkb.html</code>）若变更URL，需同步更新。</p></li></ol><hr><h2 id="6-输出示例">6. 输出示例</h2><h3 id="6-1-JSON文件（extracted-courses-json）">6.1 JSON文件（extracted_courses.json）</h3><p>和谐了部分隐私信息（</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;bklxdjmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cd_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1015170&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cdlbmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;多媒体&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cdmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████517&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cxbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cxbjmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;date&quot;</span><span class="punctuation">:</span> <span class="string">&quot;二○二四年十一月十五日&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dateDigit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024年11月15日&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dateDigitSeparator&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024-11-15&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;day&quot;</span><span class="punctuation">:</span> <span class="string">&quot;15&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3-4节&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jcor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3-4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jcs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3-4&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jgh_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;104119&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jgpxzd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxb_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1850E3A697E512CAE06███████ACA210&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxbmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(2024-2025-1)-216███████-01&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxbsftkbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;jxbzc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kcbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主修&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kch&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kch_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kclb&quot;</span><span class="punctuation">:</span> <span class="string">&quot;专业课程平台&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kcmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;常微分方程1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kcxszc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;理论:48&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kcxz&quot;</span><span class="punctuation">:</span> <span class="string">&quot;专选&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kczxs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;48&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;khfsmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;考试&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;kkzt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lh&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████楼&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;listnav&quot;</span><span class="punctuation">:</span> <span class="string">&quot;false&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;localeKey&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zh_CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;month&quot;</span><span class="punctuation">:</span> <span class="string">&quot;11&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;oldjc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;oldzc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;65280&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pageTotal&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pageable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pkbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;px&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;qqqh&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;queryModel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;currentPage&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;currentResult&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;entityOrField&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;limit&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;offset&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;pageNo&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;pageSize&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;showCount&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;sorts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;totalCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;totalPage&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;totalResult&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rangeable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rk&quot;</span><span class="punctuation">:</span> <span class="string">&quot;12&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;rsdzjs&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sfjf&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;skfsmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;sxbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;totalResult&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;userModel&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;monitor&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;roleCount&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;roleKeys&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;roleValues&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;usable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xf&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xkbz&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xnm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqdm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqh1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1,2,&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqh_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqjmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;星期一&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xqmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xsdm&quot;</span><span class="punctuation">:</span> <span class="string">&quot;01&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;xslxbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;year&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2024&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zcd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9-███████周&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zcmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zfjmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;主讲&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zhxs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;3&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zxs&quot;</span><span class="punctuation">:</span> <span class="string">&quot;48&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zxxx&quot;</span><span class="punctuation">:</span> <span class="string">&quot;无&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zyfxmc&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zyhxkcbj&quot;</span><span class="punctuation">:</span> <span class="string">&quot;否&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;zzrl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;███████&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><h3 id="6-2-CSV文件（courses-csv）">6.2 CSV文件（courses.csv）</h3><table><thead><tr><th style="text-align:center">课程名称</th><th style="text-align:center">教室</th><th style="text-align:center">节数</th><th style="text-align:center">日期</th><th style="text-align:center">课时安排</th></tr></thead><tbody><tr><td style="text-align:center">常微分方程1</td><td style="text-align:center">███████</td><td style="text-align:center">3-4</td><td style="text-align:center">周一</td><td style="text-align:center">1-16周</td></tr></tbody></table><img src="https://free-img.400040.xyz/4/2025/03/01/67c2b36edf98c.png" style="zoom:50%;" /><h2 id="7-todo">7. todo</h2><ol><li><strong>可视化界面</strong>：集成<code>tkinter</code>或Web框架（如Flask）提供GUI操作。</li><li><strong>全校课表爬虫</strong></li></ol>]]></content>
    
    
    <summary type="html">爬虫实战-爬取广州大学课程表</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于WSL Docker清理</title>
    <link href="https://zhongye1.github.io/posts/2507c4cf.html"/>
    <id>https://zhongye1.github.io/posts/2507c4cf.html</id>
    <published>2025-03-01T05:54:15.000Z</published>
    <updated>2025-03-01T06:01:44.893Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows下释放Docker所占用的WSL磁盘空间">Windows下释放Docker所占用的WSL磁盘空间</h2><p>使用下面的命令清理镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker system prune</span><br></pre></td></tr></table></figure><p>在Linux下面可以释放磁盘空间，但是在Windows下却并不能够真正的释放硬盘。</p><p>搜寻了一下，发现有一个文件超级大：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\&#123;用户名&#125;\AppData\Local\Docker\wsl\data\ext4.vhdx</span><br></pre></td></tr></table></figure><p>这是WSL的虚拟机文件。这个文件看起来是只增长，不回收硬盘空间的，所以，需要手动回收硬盘空间。</p><h3 id="1-停止wsl2">1. 停止wsl2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --shutdown</span><br></pre></td></tr></table></figure><h3 id="2-运行diskpart释放空间">2. 运行<a href="https://zhida.zhihu.com/search?content_id=241674682&amp;content_type=Article&amp;match_order=1&amp;q=diskpart&amp;zhida_source=entity">diskpart</a>释放空间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 代码来自 https://github.com/microsoft/WSL/issues/4699#issuecomment-627133168</span></span><br><span class="line"></span><br><span class="line">diskpart</span><br><span class="line"><span class="keyword">select</span> vdisk file=<span class="string">&quot;C:\Users\&lt;你的用户名&gt;\AppData\Local\Docker\wsl\data\ext4.vhdx&quot;</span></span><br><span class="line">attach vdisk <span class="built_in">readonly</span></span><br><span class="line">compact vdisk</span><br><span class="line">detach vdisk</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="参考资料">参考资料</h3><ul><li><a href="https://link.zhihu.com/?target=https%3A//gist.github.com/banyudu/af131c7bb681e8a80b5cbe2047e62d4c">WSL2 Docker释放磁盘空间</a></li><li><a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/f7cb8d952427">wsl2 下清理 docker 占用空间</a></li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/microsoft/WSL/issues/4699%23issuecomment-627133168">WSL 2 should automatically release disk space back to the host OS</a></li></ul>]]></content>
    
    
    <summary type="html">Windows下释放Docker所占用的WSL磁盘空间</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>二月</title>
    <link href="https://zhongye1.github.io/posts/52178317.html"/>
    <id>https://zhongye1.github.io/posts/52178317.html</id>
    <published>2025-02-27T16:11:08.000Z</published>
    <updated>2025-02-28T16:34:16.042Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>2月1日</p></div><p>然而还是不记得当天做了什么，大抵是在湖北躺了一天</p><p>这时候年也没过完</p><p>还是过年好，年后事情也多</p><hr><div class="tip "><p>2月20日</p></div><p>报考科目三</p><p>驾培机构乱收钱</p><p>梅姨阁诗人</p><hr><div class="tip "><p>2月22日</p></div><p>c1科一到科四一遍过了，驾照到手</p><img src="https://pic3.zhimg.com/80/v2-dab83f91afe2e193bc181322dd769d7c_720w.webp" alt="img" style="zoom:50%;" /><center>传奇手动挡驾驶员mmk (图文无关</center><hr><div class="tip "><p>2月23日</p></div><p>返校了（悲</p><p>还有个项目拖了三周拼尽全力无法战胜</p><p><em>（最后重装了linux弄好了</em></p><hr><div class="tip "><p>2月25日</p></div><p>事已至此，先吃面罢</p><p><img src="https://free-img.400040.xyz/4/2025/03/01/67c1e34a56820.jpg" alt=""></p><hr><div class="tip "><p>2月27日</p></div><p>继续搞项目</p><p>另外这学期打算过软考</p><p><img src="https://free-img.400040.xyz/4/2025/03/01/67c1e3b99101c.jpg" alt=""></p><p>数据结构还在追我     <em>数据结构还在追我</em>     <em><strong>数据结构还在追我</strong></em></p><hr><div class="tip "><p>2月28日</p></div><p>被CSP气晕，要老老实实上nginx反代</p><p>还没试，如果搞不定的话更麻烦了，说实话已经有的头疼了</p><p><img src="https://free-img.400040.xyz/4/2025/03/01/67c1e41f36480.jpg" alt=""></p>]]></content>
    
    
    <summary type="html">数据结构还在追我</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://zhongye1.github.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>一月</title>
    <link href="https://zhongye1.github.io/posts/62016fcf.html"/>
    <id>https://zhongye1.github.io/posts/62016fcf.html</id>
    <published>2025-01-30T15:44:41.000Z</published>
    <updated>2025-02-28T16:10:42.573Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>1月1日</p></div><p>元旦</p><p>也不记得自己干了什么，反正留在广东</p><p>不知道的还以为是在图书馆又待了一天</p><hr><div class="tip "><p>1月6日</p></div><p>这几天都在忙复习</p><p>至少在外边不会被二手烟伤害了</p><hr><div class="tip "><p>1月11日</p></div><p>考完了</p><p>晚上去了趟琶洲，漫展偶遇路演</p><img src="https://pic3.zhimg.com/v2-be803037e4134c2652604cd0b1358f34_r.jpg" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>1月13日</p></div><p>白龙:“汤婆婆会夺走你的名字，你说你的名字叫 DROP TABLE user name, 就好了”</p><p>汤婆婆:“这就是你的名字吗?“<br>汤婆婆:“这个名字真难记啊。现在开始你的名字就叫com.mysql.jdbc.exceptions.MySQLSyntaxErrorException: Tablemydb1.user name’ doesn’t exist”</p><hr><div class="tip "><p>1月17日</p></div><p>想玩硬件的第10086天</p><hr><div class="tip "><p>1月底</p></div><p>回湖北过年</p><div class="fj-gallery"><p><img src="https://pica.zhimg.com/80/v2-a1b2f0fc7c0d44c35f5222fdaa39a10e_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-3baa5e2797dfa1ce54d8a2fd51d85c9e_720w.webp" alt="img"></p><p><img src="https://pic3.zhimg.com/80/v2-9d77ae5a219e7e9a2075ddec90055ad2_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-e1f3c64fbee4fd13b2c841f8a6430729_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-54a5c17c9e519870bc0ea249c0e6e1e4_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-ab911531afd24de8f47344ee2c51b84b_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-b35ff1d0f410706b4fb5443754aa801d_720w.webp" alt="img"></p><p><img src="https://pic2.zhimg.com/80/v2-7569a5b4445473fd23c0bb273592b537_720w.webp" alt="img"></p>          </div><p>年前了</p><p>高铁票挺贵的</p><p>似乎很多东西都可以一句大过年的来搪塞过去</p><p>过年这会总有两段时间要死要活的</p><p>第一次是抢票一路回湖北，各种坑</p><p>第二次是年过完离开老家离别亲人，不知道多久再回去</p>]]></content>
    
    
    <summary type="html">似乎很多东西都可以一句大过年的来搪塞过去</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://zhongye1.github.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>十二月</title>
    <link href="https://zhongye1.github.io/posts/932283f3.html"/>
    <id>https://zhongye1.github.io/posts/932283f3.html</id>
    <published>2024-12-30T15:13:47.000Z</published>
    <updated>2025-02-28T15:45:47.386Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>12月1日</p></div><p>已经十二月了，最近有很多事情</p><p>虽然但是，这些还是要继续下去，没有时间停下来说抱歉，我回信道。</p><p><img src="https://pic2.zhimg.com/v2-c5c2ca5802ac19cdccc8a1168a43ad47_r.jpg" alt=""></p><p><img src="https://pic4.zhimg.com/v2-72b673f5d8c8c929c121ca6a0e1472f5_r.jpg" alt="img"></p><hr><div class="tip "><p>12月2日</p></div><p>出乎意料的收到了劳务费</p><p>其实感觉自己在这方面上做的还是很有限，所以出乎意料</p><p>那继续下去吧</p><img src="https://free-img.400040.xyz/4/2024/12/02/674dd4c55166a.png" style="zoom: 50%;" /><p>黑眼圈重到眼镜都挡不住，今晚早点睡</p><p>明天还有一堆事情要做，比如这个</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2024</span>-<span class="number">11</span>-<span class="number">29</span> <span class="number">20</span>:<span class="number">20</span>:<span class="number">14.194</span> 处理数据包时出错: Did <span class="keyword">not</span> find sedes handling <span class="keyword">type</span> <span class="keyword">map</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/discv4/discovery.py&quot;</span>, <span class="literal">line</span> <span class="number">423</span>, <span class="keyword">in</span> receive</span><br><span class="line">    self.receive_find_neighbors(addr, pubkey, fn)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/discv4/discovery.py&quot;</span>, <span class="literal">line</span> <span class="number">612</span>, <span class="keyword">in</span> receive_find_neighbors</span><br><span class="line">    self.send_sock(ns, node_to)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/discv4/discovery.py&quot;</span>, <span class="literal">line</span> <span class="number">998</span>, <span class="keyword">in</span> send_sock</span><br><span class="line">    message = self.wrap_packet(packet)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/discv4/discovery.py&quot;</span>, <span class="literal">line</span> <span class="number">1020</span>, <span class="keyword">in</span> wrap_packet</span><br><span class="line">    packet_data = rlp.encode(packet.pack())</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/.venv/lib/python3.10/site-packages/rlp/codec.py&quot;</span>, <span class="literal">line</span> <span class="number">141</span>, <span class="keyword">in</span> encode</span><br><span class="line">    item = infer_sedes(obj).serialize(obj)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/.venv/lib/python3.10/site-packages/rlp/codec.py&quot;</span>, <span class="literal">line</span> <span class="number">348</span>, <span class="keyword">in</span> infer_sedes</span><br><span class="line">    <span class="keyword">return</span> List(<span class="keyword">map</span>(infer_sedes, obj))</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/.venv/lib/python3.10/site-packages/rlp/sedes/lists.py&quot;</span>, <span class="literal">line</span> <span class="number">57</span>, <span class="keyword">in</span> __init__</span><br><span class="line">    <span class="keyword">for</span> e <span class="keyword">in</span> elements:</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/home/zhongye/ethPyProject/.venv/lib/python3.10/site-packages/rlp/codec.py&quot;</span>, <span class="literal">line</span> <span class="number">354</span>, <span class="keyword">in</span> infer_sedes</span><br><span class="line">    raise TypeError(msg)</span><br><span class="line">TypeError: Did <span class="keyword">not</span> find sedes handling <span class="keyword">type</span> <span class="keyword">map</span></span><br></pre></td></tr></table></figure><p>另外睡前听歌</p>    <div id="aplayer-feyJPKII" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="10134338436" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p><img src="https://pica.zhimg.com/v2-c512ff1b826643bdea827615a75ae09a_r.jpg" alt="img"></p><hr><div class="tip "><p>12月4日</p></div><p>被虚拟机气晕</p><img src="https://pica.zhimg.com/80/v2-69b52d7a07d98b407f246672c230a012_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>12月11日</p></div><p>春节临近，突发奇想感觉春晚吉祥物应该是这个</p><img src="https://pica.zhimg.com/80/v2-26eb7ede1b0511de55d268c6b55ae070_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>12月13日</p></div><p>今日继续项目</p><img src="https://pic1.zhimg.com/v2-3e91e73bc5189b43f601d14755c9bc0a_r.jpg" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>12月14日</p></div><p>今日诸事不顺，经历一堆麻烦事情后吃碗面先</p><img src="https://pica.zhimg.com/80/v2-b05368d6f42143630b178db00cac1a14_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>12月18日</p></div><p>想回到这年七月把自己揍一顿，给自己挖这么多坑留着上强度</p><hr><div class="tip "><p>12月22日</p></div><p>这个时候了气候还是和春天一样</p><img src="https://pic4.zhimg.com/v2-53382b7497949465b49e55d43a3544e9_r.jpg" alt="img" style="zoom:50%;" /><img src="https://pica.zhimg.com/v2-a570c476527014b4887823a36862cf62_r.jpg" alt="img" style="zoom:50%;" /><p>宿舍里被二手烟搞出后遗症，去哪都感觉有烟味</p><hr><div class="tip "><p>12月23日</p></div><p>看着别人庆祝圣诞节</p><p>还在学校内摆了个圣诞树还搞人工降雪</p><p>不过个人觉得广东不太像是会过圣诞的地方</p><img src="https://pic3.zhimg.com/80/v2-3192fa4945cc38f5a380d7a719c7f1ba_720w.webp" alt="img" style="zoom:67%;" /><hr><div class="tip "><p>12月24日</p></div><p>2024过的好快，马上又是一堆考试</p><img src="https://picx.zhimg.com/80/v2-56139479e295e0d4dc4106db137fb12a_720w.jpeg" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>12月26日</p></div><p>电脑里有一款改css样式会封号的即时通讯软件</p><hr><div class="tip "><p>12月30日</p></div><p>月底了，也算是年底了</p><p>虽然但是，没有什么时间庆祝新年，也对2025无感</p><p>图书馆还是抢不到位置，遂来理科北复习</p><p><img src="https://pic1.zhimg.com/v2-ee6582fed8923578bf9fec2d99089d2a_r.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/v2-53382b7497949465b49e55d43a3544e9_r.jpg" alt="img"></p><p><img src="https://pica.zhimg.com/v2-ba61fd79c2178534dfe1b5aa38f1e2aa_r.jpg" alt="img"></p><p>那么今年算是结束了，不过这气候怎么也不像是要过年的样子</p>    <div id="aplayer-NPDCivZB" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1634136" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
    
    
    <summary type="html">虽然但是，这些还是要继续下去</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://zhongye1.github.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>年末</title>
    <link href="https://zhongye1.github.io/posts/49138b5e.html"/>
    <id>https://zhongye1.github.io/posts/49138b5e.html</id>
    <published>2024-12-21T15:21:49.000Z</published>
    <updated>2025-03-19T16:04:32.223Z</updated>
    
    <content type="html"><![CDATA[<div class="container" style="font-size:20px">    <div id="current-datetime">        <p> Hello, it is <span id="current-date"></span>  -  <span id="current-time"></span>  -  <span id="current-day-of-week"></span> now!<br> Without you here again.</p>    </div>    <div id="elapsed-time">        <p>今年已经过去了<span id="elapsed-days"></span>天 <span id="elapsed-hours"></span>小时 <span id="elapsed-minutes"></span>分钟 <span id="elapsed-seconds"></span>秒 <span id="elapsed-milliseconds"></span>ms</p>    </div>    <div id="percentage">        <p>今年已经过去<span id="elapsed-percentage"></span>%</p>    </div><script>function updateElapsedTime() {    const now = new Date();    const startOfYear = new Date(now.getFullYear(), 0, 0, 0, 0, 0, 0);    const endOfYear = new Date(now.getFullYear() + 1, 0, 0, 0, 0, 0, 0);    const elapsedTime = now - startOfYear;    const totalYearTime = endOfYear - startOfYear;    const elapsedDays = Math.floor(elapsedTime / (1000 * 60 * 60 * 24));    const elapsedHours = Math.floor((elapsedTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));    const elapsedMinutes = Math.floor((elapsedTime % (1000 * 60 * 60)) / (1000 * 60));    const elapsedSeconds = Math.floor((elapsedTime % (1000 * 60)) / 1000);    const elapsedMilliseconds = Math.floor((elapsedTime % 10)); // 精确到0.1毫秒    const elapsedPercentage = (elapsedTime / totalYearTime) * 100;    document.getElementById('elapsed-days').innerText = elapsedDays;    document.getElementById('elapsed-hours').innerText = elapsedHours;    document.getElementById('elapsed-minutes').innerText = elapsedMinutes;    document.getElementById('elapsed-seconds').innerText = elapsedSeconds;    document.getElementById('elapsed-milliseconds').innerText = elapsedMilliseconds.toFixed(1);    document.getElementById('elapsed-percentage').innerText = elapsedPercentage.toFixed(10); // 修改为两位小数    // 更新当前时间和日期以及星期    const hours = now.getHours().toString().padStart(2, '0');    const minutes = now.getMinutes().toString().padStart(2, '0');    const seconds = now.getSeconds().toString().padStart(2, '0');    const year = now.getFullYear();    const month = (now.getMonth() + 1).toString().padStart(2, '0'); // 注意月份从0开始    const day = now.getDate().toString().padStart(2, '0');    const dayOfWeek = ['Sun', 'Mon.', 'Tues.', 'Wed.', 'Thur.', 'Fri.', 'Sat.'][now.getDay()];    document.getElementById('current-time').innerText = `${hours}:${minutes}:${seconds}`;    document.getElementById('current-date').innerText = `${year}-${month}-${day}`;    document.getElementById('current-day-of-week').innerText = dayOfWeek;}// 每1秒更新一次const timerInterval = setInterval(updateElapsedTime, 1);updateElapsedTime(); // 初始化显示</script><p>另外，也感谢在这些日子里一同合作走过去的人们：</p><p><div align="center"><br>  <table>    <tr>      <td align="center">        <a https://github.com/Zhongye1">          <img src="https://pic2.zhimg.com/80/v2-befdc184494fe03ab71d5975ff6e94a3_720w.webp" alt="Vaibhav" width="100" height="100" />          <br />          <strong>Gotoh Hitori</strong>          <br />          <em>GitHub: <a href="https://github.com/Zhongye1">@Bocchi</a></em>          <br />          Contributions: Code 💻, Documentation 📖        </a>      </td>      <td align="center">        <a "https://github.com/Ijichi-Nijika">          <img src="https://pic1.zhimg.com/80/v2-f2036928025ce9e3c3ac56107277904a_720w.webp" alt="Ijichi-Nijika" width="100" height="100" />          <br />          <strong>Nijika</strong>          <br />          <em>GitHub: <a href="https://github.com/Ijichi-Nijika">@Nijika</a></em>          <br />          Contributions: Documentation 📖        </a>      </td>      <td align="center">        <a "https://github.com/Yamada Ryo">          <img src="https://pica.zhimg.com/80/v2-178f3e713b43c59ed03602c621d67192_720w.webp" alt="Yamada Ryo" width="100" height="100" />          <br />          <strong>Yamada-Ryo</strong>          <br />          <em>GitHub: <a href="https://github.com/Yamada-Ryo">@Ryo233</a></em>          <br />          Contributions: Documentation 📖        </a>      </td>      <td align="center">        <a "https://github.com/Kita Ikuyo">          <img src="https://pica.zhimg.com/80/v2-bec19e9cd3c5ccdf4f05e60d12378d54_720w.webp" alt="Kita Ikuyo" width="100" height="100" />          <br />          <strong>Kita</strong>          <br />          <em>GitHub: <a href="https://github.com/Kita-Ikuyo">@KitaIkuyo</a></em>          <br />          Contributions: Documentation 📖        </a>      </td>    </tr>  </table></p><p><img src="https://picx.zhimg.com/v2-dd536fc95ddb541cc97b4c3a8c9ae2d0_720w.jpg?source=d16d100b" alt="img"></p><p><img src="https://picx.zhimg.com/v2-c512ff1b826643bdea827615a75ae09a_720w.jpg?source=d16d100b" alt="img"></p>]]></content>
    
    
    <summary type="html">另外，也感谢在这些日子里一同合作走过去的开发者们</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>十一月</title>
    <link href="https://zhongye1.github.io/posts/a3346f2b.html"/>
    <id>https://zhongye1.github.io/posts/a3346f2b.html</id>
    <published>2024-11-29T16:04:39.000Z</published>
    <updated>2025-03-19T15:12:36.724Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>11月1日</p></div><p>今日十一月一日</p><img src="https://pica.zhimg.com/v2-164f0c352e3898a34f68dac4c11c9304_r.jpg" alt="img" style="zoom:33%;" /><hr><div class="tip "><p>11月2日</p></div><p>晚上大战计网</p><p>然后发现项目卡了半个月的罪魁祸首是wsl</p><p>换虚拟机光速解决（其实中间崩了一次</p><p>这玩意一直都要纯linux为什么当初会想着用wsl逃课来着…</p><p>早用虚拟机就解决问题了（倒</p><img src="https://pic1.zhimg.com/v2-0bd75187fb07ea758017ab2ce29b4d7a_r.jpg" alt="img" style="zoom: 25%;" /><img src="https://pic4.zhimg.com/v2-a0411c1b4ab5f6ec3b376515ca2e10db_r.jpg" alt="img" style="zoom:25%;" /><hr><div class="tip "><p>11月3日</p></div><p>今日摸鱼全日</p><p>体测完腿痛难受</p><p>附摸鱼作</p><p><img src="https://pic1.zhimg.com/v2-72663e9851595dd8c9678c90a8a9440a_r.jpg" alt="img"></p><p>十一月了这</p><p>今年也望到底了，不过广东还是夏天，这气候如此不真实仿佛此地并没有时间存在着</p><p>一直想去个有一年四季的地方</p><p>但天黑的太快想走也来不及~</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=3&id=2532513191&auto=0&height=66"></iframe><hr><div class="tip "><p>11月4日</p></div><p>世界的本质是一个巨大的草台班子（大悲</p><img src="https://pic1.zhimg.com/80/v2-03015b20688cff356a57effde569902c_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>11月7日</p></div><p>项目算是到一个新阶段了，不想再踩坑了</p><p>汇报完后去了小洲便桥喝一杯</p><p>然后还是好多事情要干</p><p>那关于接下来的事情单独列一个页面</p><p>…</p><hr><div class="tip "><p>11月8日</p></div><p>我觉得我们可以弄一个api聚合站用来提供AIGC服务</p><p>然后建立个github组织来进行运营，争取到大学创新创业大赛的指导老师，争取到学校背书，扩大影响力</p><p>道路已经指明了，实践起来要点难度，但是我们总会有时间的。</p><p><a href="https://github.com/Guangzhou-University-SITE-193">https://github.com/Guangzhou-University-SITE-193</a></p><p><img src="https://free-img.400040.xyz/4/2024/11/09/672ef6c9ed157.png" alt=""></p><p>此外还有个站点页面 <a href="https://guangzhou-university-site-193.github.io/GZHU-SITE/">https://guangzhou-university-site-193.github.io/GZHU-SITE/</a></p><p><img src="https://free-img.400040.xyz/4/2024/11/09/672ef6bc8f1c1.png" alt=""></p><p>是的，同志们，我们总会有时间的</p><br><hr><p>然后现实里我也拉不到一起来做的人其实</p><p>然后我又发现自己在这一方面的病情又加重了</p><p>我也不像像马化腾一样有一宿舍有能力有理想的舍友能一起从事项目</p><p>或者是说大学以来就没有能一起交流这些的人</p><p>所以很难</p><p><br><br></p><p>写了很多最后又删了，睡了</p><p>我也不应该把这些负面的事实告诉家人，我有错</p><p>明明现实的问题已经如此严重了，然而…</p><p>然而什么，我也没头绪</p><hr><div class="tip "><p>11月9日</p></div><p>然而隔了一天自己在这一方面的病情照旧</p><p>睡一觉起来枕头上全是头发，醒来时也不知自己是如何睡着的</p><p>至于项目，目前的问题就是在面对问题时，摸不清它，看不透它</p><p>自然解决起来也很难</p><p>身边的资源极为有限，能寻求的帮助很少</p><p>毫无疑问的被泼了冷水，于是我不禁在想这种境地是为何</p><p>也想不明白。</p><p>身边有的太少，要学的也太多。</p><p>但我总是希望能有时间去搞定这些的</p><p><br><br><br></p><p>我觉得目前的情况要追溯的话会没完没了</p><p>最难的是这些问题都要自己解决</p><p>做项目也是想去展示自己有能力去弄这些…</p><p>然后或许当这些完成后会好一点</p><p><br><br><br></p><p>另外，湖北入秋了</p><p>当时说将来可能看不到那种景致了，要多看看。</p><p>我开玩笑说这不太可能</p><p>现在我忽然有些后悔那时没有多再看看那些。</p><br><br><p>之后也是</p><p>在别离的日子里不要过的太过压抑</p><hr><div class="tip "><p>11月10日</p></div><p>今日最终还是没去成黄埔</p><p><img src="https://pic2.zhimg.com/v2-de9935c50256bab7b252f0f85b32cd1f_r.jpg" alt="img"></p><hr><div class="tip "><p>11月11日</p></div><p>今日将neo4j接入ETH网络</p><p>算是有些进展，因为计网基础知识的问题踩了一些坑</p><p>要学的太多而时间太少能力太弱</p><p>要走的路很远</p><p>共勉</p><p><img src="https://pic4.zhimg.com/v2-607896de21f72d0739d3d002c6535e53_r.jpg" alt="img"></p><hr><div class="tip "><p>11月12日</p></div><p>摄于晚课结束后</p><p><img src="https://picx.zhimg.com/v2-97d3c21993d620a296be9f86c15400cd_r.jpg" alt="img"></p><img src="https://pic2.zhimg.com/v2-a40ca0a3747163aa2b6755d1e070b9ef_r.jpg" alt="img" style="zoom:50%;" /><p>参观了其他院的实验室，关于那些目前还是长远方面的</p><p>眼下事情太多，最近在写教务系统爬虫，还有期末复习要搞</p><p>此外，如果开项时还没学完vue的话，校园服务的开发生涯大概就结束了罢</p><p>我想各位还是要发挥能动性来克服这些困难</p><hr><p>此外建设站点中</p><p><img src="https://pica.zhimg.com/v2-827f51cffe56b89a805a97a1646c8296_r.jpg" alt="img"></p><hr><div class="tip "><p>11月14日</p></div><p>晚上无事再次前往长洲岛</p><p>军港船厂大院偶遇卡莫夫直升机</p><p>想不到海军还会买这个</p><hr><div class="tip "><p>11月15日</p></div><p>写了个教务系统爬取课表的爬虫</p><p>虽然没啥实际价值，单纯学习技术原理</p><p><a href="https://short-link.me/MyJU">https://short-link.me/MyJU</a></p><p><img src="https://pic3.zhimg.com/v2-a80e4de3dcc27d43837a2824777d3850_r.jpg" alt="img"></p><hr><div class="tip "><p>11月16日</p></div><p>关于api动态返回github卡片的建设计划搁置</p><p>没搭完也没空研究</p><p>当下要注重于更多近期的事情</p><p>说白了就是忙</p><p>云服务器搞到手了，先搞复现</p><p>另外还有其他项目</p><p>以及期末也麻烦</p><hr><p>剩下的到寒假</p><p>此外上个学期期末的时候总是想着考完把七月番追完，然而到现在都没补</p><p>到寒假的话，</p><p>寒假事情也多</p><p>先把手头上的做起来先</p><hr><p>另外大战云服务器</p><p><img src="https://free-img.400040.xyz/4/2024/11/17/673a092b73402.png" alt=""></p><p>为毛虚拟机里光速搭好的东西弄到云服务器上会这么麻烦</p><p>一个周六又没了</p><hr><div class="tip "><p>11月17日</p></div><p>今日前往黄埔</p><p>故地重游，天色太暗提前返程</p><p><img src="https://pic2.zhimg.com/v2-718e5429bc8d2b86c83d74acd1f05329_r.jpg" alt="img"></p><hr><div class="tip "><p>11月20日</p></div><p>晚上无课，遂前往珠江边散步</p><p>年轻时自己还是要留几张照片</p><p><a href="https://free-img.400040.xyz/4/2024/11/25/67435694132a7.jpg">https://free-img.400040.xyz/4/2024/11/25/67435694132a7.jpg</a></p><br><p>也不知道以后看到这个时候的自己是什么感受…</p><hr><div class="tip "><p>11月21日</p></div><p>难搞</p><p>中午食堂偶遇食堂刺客痛失17块</p><p>另外搞项目也搞不成还要忙期末</p><p>这下完了.jpg</p><hr><div class="tip "><p>11月22日</p></div><p>遇到很多难题</p><p>天气转凉，晚上出图书馆的时候在校内散步</p><p>想了很多最后都没记下来</p><p>假如说这些问题一直放在这里无法解决，那怎么办呢</p><p>所以这就让人头疼了</p><hr><div class="tip "><p>11月24日</p></div><p>华南二次寒潮，阴雨天气</p><p>下午陪跑网页设计大赛</p><p>感觉自己一个人去和对面计科网工软科的团队竞争有点难</p><p>所以匆忙展示完后遗憾离场</p><p>要走的路太长了</p><p><img src="https://free-img.400040.xyz/4/2024/11/25/6743547b8e8c7.jpg" alt=""></p><p>此外，不该拿前几天摸鱼的</p><p>现在常微分复习也搞不完，弄到半夜</p><p>郁闷也没办法</p><p>11月24号了都，今年也快要结束了…</p><br><br><p>那么，在冷空气来到华南的这些日子里，放首歌</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=5285416&auto=0&height=66"></iframe><p>睡了</p><p>我也希望有个明亮的未来，在这些灰暗的日子里</p><p>从什么时候我不得不去思考这些了，</p><p>做什么都无时无刻不得不思考现实中的这些问题</p><p>即使在看番时那些现实的引力也无法逃离</p><p>最后看完一部番抑郁了半天</p><p>从何时何地起陷入这般境地…</p><p>看看自己现在都没继续追番了</p><hr><div class="tip "><p>11月27日</p></div><p>下午大战概率论，现在要复习的东西一堆</p><hr><div class="tip "><p>11月28日</p></div><p>最近事情挺多</p><p>在文渊楼上楼梯时不由得感慨十一月过的如此之快</p><p>看看这些学过的内容，做过的笔记，收集的日志，进行的项目</p><p>其实我们已经走了这么远了，同志们</p><img src="https://pic1.zhimg.com/v2-a8ac37204650f5eab010f8582c252674_r.jpg" alt="img" style="zoom: 67%;" /><p>不过目前的问题还是很多</p><p>希望这些只是时间问题</p><p>等这些结束后好好睡一下</p><p>此外晚上参加了一个圆桌会谈</p><p>感觉挺有意义，录音文件做了下归档</p><img src="https://pic1.zhimg.com/v2-4fd5cf2bb38c136f8b990e2be46d5480_r.jpg" alt="img" style="zoom: 25%;" /><p>（在这天最后的时刻写了个倒计时）</p><hr><div class="tip "><p>11月29日</p></div><p>我们数科也要有自己的培养皿（</p><p><img src="https://free-img.400040.xyz/4/2024/11/30/6749f156c04f7.jpg" alt=""></p><p><img src="https://pic4.zhimg.com/v2-72b673f5d8c8c929c121ca6a0e1472f5_r.jpg" alt="img"></p><p>继续搞项目，一个下午一杯咖啡开了两个腾讯会议在虚拟机前发了五个小时的牢骚</p><p>然后事情朝着诡异的方向走了</p><p><img src="https://pic4.zhimg.com/v2-e97a04b83b993e45a0a675753faf3f2d_r.jpg" alt="img"></p><p>VMlinux自定义的ip意外接通了外网</p><p>应该是代理的问题，也可能校园网的漏洞（笑</p><p>那明天再试下</p><hr><div class="tip "><p>11月30日</p></div><p>话说也十一月底了呢</p><p>那么，也感谢这些日子里陪我走过今年这剩下十二分之一的朋友们</p><p>还有三十来天就是2025年了，同志们！</p><p>那时我们在华南过去又一年</p><h3 id="开发合作-📋">开发合作 📋</h3><p>Thanks goes to these wonderful people:</p><div align="center">  <table>    <tr>      <td align="center">        <a https://github.com/Zhongye1">          <img src="https://pic2.zhimg.com/80/v2-befdc184494fe03ab71d5975ff6e94a3_720w.webp" alt="Vaibhav" width="100" height="100" />          <br />          <strong>Gotoh Hitori</strong>          <br />          <em>GitHub: <a href="https://github.com/Zhongye1">@Bocchi</a></em>          <br />          Contributions: Code 💻, Documentation 📖        </a>      </td>      <td align="center">        <a "https://github.com/Ijichi-Nijika">          <img src="https://pic1.zhimg.com/80/v2-f2036928025ce9e3c3ac56107277904a_720w.webp" alt="Ijichi-Nijika" width="100" height="100" />          <br />          <strong>Nijika</strong>          <br />          <em>GitHub: <a href="https://github.com/Ijichi-Nijika">@Nijika</a></em>          <br />          Contributions: Documentation 📖        </a>      </td>      <td align="center">        <a "https://github.com/Yamada Ryo">          <img src="https://pica.zhimg.com/80/v2-178f3e713b43c59ed03602c621d67192_720w.webp" alt="Yamada Ryo" width="100" height="100" />          <br />          <strong>Yamada-Ryo</strong>          <br />          <em>GitHub: <a href="https://github.com/Yamada-Ryo">@Ryo233</a></em>          <br />          Contributions: Documentation 📖        </a>      </td>      <td align="center">        <a "https://github.com/Kita Ikuyo">          <img src="https://pica.zhimg.com/80/v2-bec19e9cd3c5ccdf4f05e60d12378d54_720w.webp" alt="Kita Ikuyo" width="100" height="100" />          <br />          <strong>Kita</strong>          <br />          <em>GitHub: <a href="https://github.com/Kita-Ikuyo">@KitaIkuyo</a></em>          <br />          Contributions: Documentation 📖        </a>      </td>    </tr>  </table><hr><div></head><body><div class="container">    <div id="elapsed-time">        <p>今年已经过去了<span id="elapsed-days"></span>天 <span id="elapsed-hours"></span>小时 <span id="elapsed-minutes"></span>分钟 <span id="elapsed-seconds"></span>秒 <span id="elapsed-milliseconds"></span>ms</p>    </div>    <div id="percentage">        <p>今年已经过去<span id="elapsed-percentage"></span>%</p>    </div></div><script>function updateElapsedTime() {    const now = new Date();    const startOfYear = new Date(now.getFullYear(), 0, 0, 0, 0, 0, 0);    const endOfYear = new Date(now.getFullYear() + 1, 0, 0, 0, 0, 0, 0);    const elapsedTime = now - startOfYear;    const totalYearTime = endOfYear - startOfYear;    const elapsedDays = Math.floor(elapsedTime / (1000 * 60 * 60 * 24));    const elapsedHours = Math.floor((elapsedTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));    const elapsedMinutes = Math.floor((elapsedTime % (1000 * 60 * 60)) / (1000 * 60));    const elapsedSeconds = Math.floor((elapsedTime % (1000 * 60)) / 1000);    const elapsedMilliseconds = Math.floor((elapsedTime % 10)) ; // 精确到0.1毫秒    const elapsedPercentage = (elapsedTime / totalYearTime) * 100;    document.getElementById('elapsed-days').innerText = elapsedDays;    document.getElementById('elapsed-hours').innerText = elapsedHours;    document.getElementById('elapsed-minutes').innerText = elapsedMinutes;    document.getElementById('elapsed-seconds').innerText = elapsedSeconds;    document.getElementById('elapsed-milliseconds').innerText = elapsedMilliseconds.toFixed(1);    document.getElementById('elapsed-percentage').innerText = elapsedPercentage.toFixed(10); // 精确到0.000000000000000001%}// 每100毫秒更新一次const timerInterval = setInterval(updateElapsedTime, 1);updateElapsedTime(); // 初始化显示</script></div><p>然后我们继续生活下去</p>    <div id="aplayer-gobdVuIt" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="347036" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
    
    
    <summary type="html">“马上就是2025年了，同志们！”</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>GZHU-SITE-193</title>
    <link href="https://zhongye1.github.io/posts/925dfef1.html"/>
    <id>https://zhongye1.github.io/posts/925dfef1.html</id>
    <published>2024-11-10T11:19:12.000Z</published>
    <updated>2025-03-19T16:00:54.883Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Guangzhou-University-SITE-193-📋">@Guangzhou-University-SITE-193!📋</h2><p><em>/ Open Source Organization from Guangzhou-University</em></p><h2 id="💻This-is-our-site">💻This is our site!</h2><p><img src="https://pic1.zhimg.com/v2-842db2fbcdb441bd2562cf457f8192b4_r.jpg" alt="img"></p><p><a href="https://github.com/Guangzhou-University-SITE-193">https://github.com/Guangzhou-University-SITE-193</a></p><p><img src="https://pic1.zhimg.com/v2-9131b20113e7c8c3cde328522a90fabc_r.jpg" alt="img"></p><p><a href="https://guangzhou-university-site-193.github.io/GZHU-SITE/">https://guangzhou-university-site-193.github.io/GZHU-SITE/</a></p><h2 id="💻-Skills">💻 Skills</h2><p>🥪 <strong>Front End</strong> / 🥗 <strong>Backend</strong> / 🍊 <strong>Network Security</strong> / 🍑 <strong>Machine Learning</strong></p><h2 id="📋-Tech-Stack">📋 Tech Stack</h2><p><a href="https://skillicons.dev"><img src="https://skillicons.dev/icons?i=c,go,rust,python,arduino,lua,nodejs,php,react,next,vue,nuxt,angular,express,tailwindcss,redux,bootstrap,html,css,js,jquery,ts,less,scss,fastapi,django,flask,pytorch,tensorflow,opencv,qt,electron,tauri,threejs" alt="My Skills"></a></p><h2 id="🔨-Tools">🔨 Tools</h2><p><a href="https://skillicons.dev"><img src="https://skillicons.dev/icons?i=mysql,sqlite,redis,postgresql,rabbitmq,docker,kubernetes,nginx,git,npm,pnpm,yarn,vite,vitest,webpack,babel,cmake,anaconda,github,grafana,githubactions,jenkins,figma,aws,azure,gcp,cloudflare,vercel,netlify,heroku" alt="My Skills"></a></p><h2 id="Contributors-📋">Contributors 📋</h2><p>Thanks goes to these wonderful people:</p><div style="display: flex; flex-wrap: wrap; justify-content: center;">  <div style="background-color: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(46, 46, 46, 0.36); margin: 10px; padding: 15px; width: 282px; text-align: center; transition: transform 0.2s, box-shadow 0.2s;">    <a href="https://github.com/Zhongye1" style="color: #0073bb; text-decoration: none;">      <img src="https://avatars.githubusercontent.com/u/145737758?v=4" alt="Vaibhav" style="border-radius: 50%; width: 100px; height: 100px; margin-bottom: 10px;" />      <h3 style="font-size: 16px; margin: 0;">Gotoh Hitori</h3>    </a>    <p style="margin: 5px 0; font-size: 12px; color: #666;">      GitHub: <a href="https://github.com/Zhongye1" style="color: #0073bb; text-decoration: none;">@Zhongye1</a><br />      Contributions: Code 💻, Documentation 📖    </p>  </div>  <div style="background-color: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(46, 46, 46, 0.36); margin: 10px; padding: 15px; width: 282px; text-align: center; transition: transform 0.2s, box-shadow 0.2s;">    <a href="https://github.com/8023time" style="color: #0073bb; text-decoration: none;">      <img src="https://avatars.githubusercontent.com/u/175074711?v=4" alt="8023time" style="border-radius: 50%; width: 100px; height: 100px; margin-bottom: 10px;" />      <h3 style="font-size: 16px; margin: 0;">8023time</h3>    </a>    <p style="margin: 5px 0; font-size: 12px; color: #666;">      GitHub: <a href="https://github.com/8023time" style="color: #0073bb; text-decoration: none;">@8023time</a><br />      Contributions: Documentation 📖    </p>  </div>  <div style="background-color: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(46, 46, 46, 0.36); margin: 10px; padding: 15px; width: 282px; text-align: center; transition: transform 0.2s, box-shadow 0.2s;">    <a href="https://github.com/arianna-h" style="color: #0073bb; text-decoration: none;">      <img src="https://avatars.githubusercontent.com/u/139214701?v=4" alt="Jonah Lawrence" style="border-radius: 50%; width: 100px; height: 100px; margin-bottom: 10px;" />      <h3 style="font-size: 16px; margin: 0;">Jianxuan Zhou</h3>    </a>    <p style="margin: 5px 0; font-size: 12px; color: #666;">      GitHub: <a href="https://github.com/arianna-h" style="color: #0073bb; text-decoration: none;">@arianna-h</a><br />      Contributions: Code 💻, Documentation 📖    </p>  </div>  <div style="background-color: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(46, 46, 46, 0.36); margin: 10px; padding: 15px; width: 282px; text-align: center; transition: transform 0.2s, box-shadow 0.2s;">    <a href="https://github.com/LF12306" style="color: #0073bb; text-decoration: none;">      <img src="https://avatars.githubusercontent.com/u/100217045?v=4" alt="Milind Modi" style="border-radius: 50%; width: 100px; height: 100px; margin-bottom: 10px;" />      <h3 style="font-size: 16px; margin: 0;">yediao</h3>    </a>    <p style="margin: 5px 0; font-size: 12px; color: #666;">      GitHub: <a href="https://github.com/LF12306" style="color: #0073bb; text-decoration: none;">@LF12306</a><br />      Contributions: Documentation 📖    </p>  </div>      <div style="background-color: white; border-radius: 10px; box-shadow: 0 4px 8px rgba(46, 46, 46, 0.36); margin: 10px; padding: 15px; width: 282px; text-align: center; transition: transform 0.2s, box-shadow 0.2s;">    <a href="https://github.com/ltzu929" style="color: #0073bb; text-decoration: none;">      <img src="https://avatars.githubusercontent.com/u/184350138?v=4" alt="Milind Modi" style="border-radius: 50%; width: 100px; height: 100px; margin-bottom: 10px;" />      <h3 style="font-size: 16px; margin: 0;">ltzu929</h3>    </a>    <p style="margin: 5px 0; font-size: 12px; color: #666;">      GitHub: <a href="https://github.com/ltzu929" style="color: #0073bb; text-decoration: none;">@ltzu929</a><br />      Contributions: Documentation 📖    </p>  </div>  <!-- 更多贡献者卡片可以按照上述格式添加 --></div><h3 id="关注站长博客！">关注站长博客！</h3><p>友链 <a href="https://zhongye1.github.io">https://zhongye1.github.io</a><br>RSS订阅: <a href="https://zhongye1.github.io/atom.xml">https://zhongye1.github.io/atom.xml</a></p><h3 id="加入我们！">加入我们！</h3><p><a href="https://github.com/Guangzhou-University-SITE-193">https://github.com/Guangzhou-University-SITE-193</a></p><p>我们正在筹备站点的建设计划！</p><p>QQ：2760913192<br>GitHub：@Zhongye1  <a href="https://github.com/Zhongye1">https://github.com/Zhongye1</a></p>]]></content>
    
    
    <summary type="html">Open Source Organization from Guangzhou-University</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>创建一个网络包解码器分析DEVP2P协议</title>
    <link href="https://zhongye1.github.io/posts/1104.html"/>
    <id>https://zhongye1.github.io/posts/1104.html</id>
    <published>2024-11-04T08:45:19.000Z</published>
    <updated>2024-11-04T15:24:09.200Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="如果是项目组成员，请联系站长。WXID:Zhong_ye1" data-whm="这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="6aed951df1a08c0b2ef5f446330de532057296934c46fb6263243d4d6ad4083d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">联系站长以查看密码</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">创建一个网络包解码器分析DEVP2P协议</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>孤独摇滚漫画80-82话（更新中</title>
    <link href="https://zhongye1.github.io/posts/c7e57189.html"/>
    <id>https://zhongye1.github.io/posts/c7e57189.html</id>
    <published>2024-11-01T01:48:13.000Z</published>
    <updated>2024-11-01T02:06:08.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="漫画目录：">漫画目录：</h2><p>孤独摇滚漫画第一卷 <a href="https://zhongye1.github.io/posts/bad9f133.html">https://zhongye1.github.io/posts/bad9f133.html</a></p><p>孤独摇滚漫画第二卷 <a href="https://zhongye1.github.io/posts/b7216cba.html">https://zhongye1.github.io/posts/b7216cba.html</a></p><p>孤独摇滚漫画第三卷 <a href="https://zhongye1.github.io/posts/fa3fcfe8.html">https://zhongye1.github.io/posts/fa3fcfe8.html</a></p><p>孤独摇滚漫画第四卷 <a href="https://zhongye1.github.io/posts/4d12d68d.html">https://zhongye1.github.io/posts/4d12d68d.html</a></p><p>孤独摇滚漫画第五卷 <a href="https://zhongye1.github.io/posts/228c13ca.html">https://zhongye1.github.io/posts/228c13ca.html</a></p><p>孤独摇滚漫画特别篇 <a href="https://zhongye1.github.io/posts/9ce6bec7.html">https://zhongye1.github.io/posts/9ce6bec7.html</a></p><p>孤独摇滚漫画66-80话 <a href="https://zhongye1.github.io/posts/f4f4af0.html">https://zhongye1.github.io/posts/f4f4af0.html</a></p><p>孤独摇滚漫画80-82话（更新中 <a href="https://zhongye1.github.io/posts/c7e57189.html">https://zhongye1.github.io/posts/c7e57189.html</a></p><hr><h2 id="80-82话">80-82话</h2><p><strong>(更新中</strong></p><div class="fj-gallery"><p><img src="https://pic4.zhimg.com/v2-26da1afe06ed1755b2e6fa35f9f4c5b1_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-1bd079ce86a0bcbc638e1cfa5e35ee36_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-5df58cb34e8016b1460594f2d1714e50_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-fa8a1597e1629f20553de73453d538af_b.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/v2-78aa8d7bec1562dad5177cc845e22afd_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-ec99f9b3e522b81d4fd466669c13464f_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-a2d5e48fb138811c1cef5044eeb4432d_b.jpg" alt="img"></p><p><img src="https://pica.zhimg.com/v2-b45ad25fdf4807e2dacc69605a8c0e0e_b.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/v2-442bd3c5365f71925e3923abdc38aff3_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-5a0bcbc9198a11dbe06f46ad610e8403_b.jpg" alt="img"></p><p><img src="https://pica.zhimg.com/v2-b0523adb0d22d9105228a577dd123884_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-e5bf3f6ad3d679bfba15b6bc227172f2_b.jpg" alt="img"></p><p><img src="https://pic2.zhimg.com/v2-c3f387735dac197ceef1ac1c3872ed2f_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-e4b916ed5ffe0ced165c765ff24cfae0_b.jpg" alt="img"></p><p><img src="https://pica.zhimg.com/v2-08f6572922d67b11c49e0e8cc2971f08_b.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/v2-b2402f052f0ca90faa6e0087cad4a463_b.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/v2-8433b49533b1b326bdb534d658e68259_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-4d9e97fc183b6f75fc9d4cfd16ff1847_b.jpg" alt="img"></p><p><img src="https://pic4.zhimg.com/v2-84ec2302a2e28f10d56160f849edf239_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-51b86d2f88aaa5c1af78db09fd78c21a_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-1ff2929c433f5f71861ed74946ff6cd1_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-be85600d3f0eb5e95cd027cc2ca4db07_b.jpg" alt="img"></p><p><img src="https://pic1.zhimg.com/v2-52ebc1a48f4360faa3b0ab7f381a293c_b.jpg" alt="img"></p><p><img src="https://picx.zhimg.com/v2-7436b9c7d6a8b7f34c795b7585adccf7_b.jpg" alt="img"></p>          </div> <p>更新中…</p>]]></content>
    
    
    <summary type="html">孤独摇滚漫画80-82话（更新中</summary>
    
    
    
    <category term="漫画" scheme="https://zhongye1.github.io/categories/%E6%BC%AB%E7%94%BB/"/>
    
    
    <category term="孤独摇滚" scheme="https://zhongye1.github.io/tags/%E5%AD%A4%E7%8B%AC%E6%91%87%E6%BB%9A/"/>
    
  </entry>
  
  <entry>
    <title>十月</title>
    <link href="https://zhongye1.github.io/posts/7820ecf9.html"/>
    <id>https://zhongye1.github.io/posts/7820ecf9.html</id>
    <published>2024-10-31T15:54:27.000Z</published>
    <updated>2024-10-31T16:53:28.742Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>10月1日</p></div><p>祝共和国国庆日快乐</p><p>也希望未来会更好</p><p>共勉</p><hr><div class="tip "><p>10月2日</p></div><p>新增书柜周边</p><p><img src="https://pic1.zhimg.com/80/v2-babd2d8b4cb12cbe0ee89aa26ad06732_720w.webp" alt="img"></p><p>今日在漫展打工</p><p>在漫展打工的心态和买票看展的心态还是会有差别</p><p>不过使出工作证之力能免排几小时队入场还是挺香的</p><p>国庆假过去两天已经开始痛了</p><p>明天继续在会展中心打工</p><img src="https://pica.zhimg.com/80/v2-2d9bbbdcc1cad794c32ffb0e39ef1b2e_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pic1.zhimg.com/80/v2-3a3dc9d8a734d7cd85354f1f35fc026a_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>10月3日</p></div><p>负责漫展的电竞舞台</p><p>摸鱼…</p><p>下班后发现外场比内场好看</p><p>逛了半晚上夜场</p><p>起猛了，看见广井和巫堵同台玩摇滚</p><p><img src="https://picx.zhimg.com/80/v2-e47124b4db3f3c43f8e2a41464b41aef_720w.webp" alt="img"></p><p>【广州CICF外场广井菊理】 <a href="https://www.bilibili.com/video/BV13Mx9etEbD/">https://www.bilibili.com/video/BV13Mx9etEbD/</a></p><p>此外和一堆军宅合影</p><hr><p>假日的过去导致工作日的那些焦虑又一次袭来</p><p>然而活在当下太过于难了，现实的引力太重了…</p><p>我也想抛开这些去做自己的事情，无奈包袱太多</p><p>如果能多一会能待在某个值得回忆的时段总该好些</p><p>未来和现在的问题，还有过往的那些琐事也都等待着处理</p><p>没头绪</p><p>至少心态要放平，最起码自己对自己要好点。</p><p>要做的事就是迎接明天</p><p>睡了（</p><p><img src="https://pic1.zhimg.com/80/v2-0af045bfd3163db926638c55d8a47c46_720w.webp" alt="img"></p><hr><div class="tip "><p>10月4日</p></div><p><img src="https://pic1.zhimg.com/80/v2-5c47492a4660c80451a0ca47f7b4b63c_720w.webp" alt="img"></p><p>偶遇零时乐队路演（</p><p>还参加了合照（最现充的一次</p><p><img src="https://pica.zhimg.com/80/v2-6c9f022b4568db4b58f2c150c70aa9c2_720w.webp" alt=""></p><hr><div class="tip "><p>10月5日</p></div><p>漫展结束了（打工好困</p><p>（逃</p><hr><div class="tip "><p>10月6日</p></div><p>睡了一整天</p><img src="https://pic2.zhimg.com/80/v2-b245646e277f33266bd71373afdde5a7_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>10月7日</p></div><p>假期最后一天</p><p>焦虑了</p><p>还一堆事情没做啊</p><img src="https://picx.zhimg.com/80/v2-eeafb748fc6de6ac194657e136a6f5f3_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>10月8日</p></div><p>只是上学期期末全过了就觉得自己很强大了</p><p>在本学期选课时给自己上了不少强度</p><p>因此在这种困境之中更是要自己能够发挥主观能动性</p><p>去把这些烂摊子解决掉</p><p>所以这学期最好的结果是所有科目稳过，毕竟自己选的</p><p>另外项目能做成</p><p>此外能参加一些比赛</p><p>要做的事情太多了，所幸这些不是堆在最后完成</p><p>希望今年不会再这样了</p><hr><p>此外一些低级错误不要再犯第二遍</p><p>如果当初再注意一点的话今年完全可以少很多负担</p><p>内耗太多把一些事情搞砸了都</p><img src="https://pic3.zhimg.com/80/v2-79362776ebe6e20dfd80225b290549a4_720w.webp" alt="img" style="zoom:33%;" /><p>要不是注意的早还要把数据结构学第二遍</p><p>计网是自己决定留的，没有余地了，卷死他们。</p><hr><div class="tip "><p>10月14日</p></div><p>是啊十月十四号了为毛广东还是夏天？？？</p><p style="font-size:24px;"> 是啊十月十四号了为毛广东还是夏天？？？ </p><p style="color:red;font-size:34px;"> 是啊十月十四号了为毛广东还是夏天？？？ </p><p><img src="https://pic2.zhimg.com/80/v2-79c890906e4d20c14d146390cd7d7e0f_720w.webp" alt="img"></p><p><strong>要似了</strong></p><br><p>此外搓了个网页用于参加大学的网页大赛</p><p><img src="https://picx.zhimg.com/80/v2-ce188657fa4c90784473bfc53b894ead_720w.webp" alt="img"></p><p><a href="https://zhongye1.github.io/ABC/">网页设计大赛 (zhongye1.github.io)</a></p><hr><div class="tip "><p>10月17日</p></div><p>今日进行研究报告并友情客串华南理工大学</p><p><img src="https://pic2.zhimg.com/80/v2-1a0e1c18301d2c81f769e2861541f771_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-e1069d53fdd776005fa86be7111f1110_720w.webp" alt="img"></p><p><img src="https://picx.zhimg.com/80/v2-a42b46bd208d2585da5fe7cd3362c945_720w.webp" alt="img"></p><p>详细报告内容会归档一个页面出来</p><hr><div class="tip "><p>10月18日</p></div><p>今日更新博客并添加友链</p><p>报告内容待归档</p><p>一些课程类的东西还是要学要复习</p><p>大二了还要捡起来大一的一些事（烂摊子</p><p>难搞…</p><p>晚八点进行大学软件技术支持团队会议</p><p>学期过半一堆事情待做…</p><p>今年也是差不多摸到头了</p><hr><p>此外，希望最近的一切能在天气转凉前好起来</p><p><img src="https://pic3.zhimg.com/80/v2-e6637e5a928e621e4024baf398a52736_720w.webp" alt="img"></p><hr><div class="tip "><p>10月19日</p></div><p>甲辰年 甲戌月 丙辰日</p><p>农历九月十七</p><p>祝自己生日快乐</p><p><img src="https://pic3.zhimg.com/80/v2-0a49c09fe0d4b67d00233b79efaf01d6_720w.webp" alt="img"></p><p>共勉</p><hr><div class="tip "><p>10月25日</p></div><p>我知道这些日子里积攒的内耗太多了</p><p>想写点什么又写不下来</p><hr><div class="tip "><p>10月26日</p></div><p>今日大战docker</p><p>晚上再访大塘村</p><img src="https://picx.zhimg.com/80/v2-8f33f7d2c0ba7bcc539508a73b31bce9_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>10月27日</p></div><p>今日摸鱼一天</p><p>希望之后能好起来，最近还是空虚</p><img src="https://pic4.zhimg.com/80/v2-264d65fb677807068956919e87e4adcf_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pic2.zhimg.com/80/v2-1b55eb1e59ddfec667446fe2ff6d5b2f_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pica.zhimg.com/80/v2-e824a8352dcf9f51fa68e893076b46ee_720w.webp" alt="img" style="zoom:50%;" /><p>要干的事情太多了，一周如果有八天就好了</p><hr><div class="tip "><p>10月29日</p></div><p>因牙痛失眠彻夜</p><hr><div class="tip "><p>10月30日</p></div><p>月底了啊</p><img src="https://pic4.zhimg.com/v2-5c619eb1aedcc2e57fe197c7429da0f1_r.jpg" alt="img" style="zoom:50%;" /><img src="https://pic1.zhimg.com/v2-5f4db2b4f2e45f9da6b0b881fd375bca_r.jpg" alt="img" style="zoom:50%;" /><p>马上十一月了</p><p>等天晴，然后我们会在没有黑暗的地方相遇</p><p><br><br><br></p><p>除此之外还有什么想记下来的呢…</p><p>啊…世界和平</p><img src="https://pica.zhimg.com/80/v2-5baa339cf2f72598e4b148783a238c68_720w.webp" alt="img" style="zoom: 67%;" /><hr><div class="tip "><p>10月31日</p></div><p>看来十月结束了</p><img src="https://free-img.400040.xyz/4/2024/11/01/6723b5aaf1f9d.jpg" alt="078e65381d26fdcc0a67736929c58007" style="zoom:33%;" /><p><img src="https://free-img.400040.xyz/4/2024/10/30/67223e8bb7ee2.png" alt="image-20241030221059440"></p>]]></content>
    
    
    <summary type="html">此外，希望最近的一切能在天气转凉前好起来</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>（旧）创建一个网络包解码器分析DEVP2P协议</title>
    <link href="https://zhongye1.github.io/posts/cc887582.html"/>
    <id>https://zhongye1.github.io/posts/cc887582.html</id>
    <published>2024-10-14T14:53:46.000Z</published>
    <updated>2024-11-04T09:47:29.538Z</updated>
    
    <content type="html"><![CDATA[<hr><p><br><center>本项目最新版本</center></p><div class="tag link"><a class="link-card" title="本项目最新版本" href="https://zhongye1.github.io/posts/1104.html"><div class="left"><img src="https://pic1.zhimg.com/80/v2-593dd0a3b84d023b3827b97e81e0242a_720w.webp"/></div><div class="right"><p class="text">本项目最新版本</p><p class="url">https://zhongye1.github.io/posts/1104.html</p></div></a></div><center>附注：此页面使用wsl构建不可行</center><h1>安装配置WSL2（ubuntu20.04）</h1><p>Windows Subsystem for Linux（简称WSL），Windows下的Linux子系统，是一个在Windows 10上能够运行原生Linux二进制可执行文件（ELF格式）的兼容层。它是由微软与Canonical公司合作开发，其目标是使纯正的Ubuntu、Debian等映像能下载和解压到用户的本地计算机，并且映像内的工具和实用工具能在此子系统上原生运行。</p><h2 id="1-安装Windows-Terminal">1.安装Windows Terminal</h2><p><a href="https://zhuanlan.zhihu.com/p/351281543">Window Terminal 安装以及使用(2021最新) - 知乎</a></p><p>一个目前在用的windows命令行工具</p><p>可以直接从 <a href="https://link.zhihu.com/?target=https%3A//www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701%3Frtc%3D1%26activetab%3Dpivot%3Aoverviewtab">Microsoft Store</a> 下载安装，而且<a href="https://link.zhihu.com/?target=https%3A//github.com/microsoft/terminal/releases">Github仓库</a>上发布有内部版本。</p><h2 id="2-安装wsl">2.安装wsl</h2><p><a href="https://blog.csdn.net/m0_51233386/article/details/127961763">Windows 10 安装配置WSL2（ubuntu20.04）教程 超详细_win10安装wsl2-CSDN博客</a></p><p>对于windows10版本可以直接命令符安装</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --install</span><br></pre></td></tr></table></figure><h3 id="设置-WSL-开发环境见微软官方文档">设置 WSL 开发环境见微软官方文档</h3><h3 id="设置-WSL-开发环境-Microsoft-Learn"><a href="https://learn.microsoft.com/zh-cn/windows/wsl/setup/environment">设置 WSL 开发环境 | Microsoft Learn</a></h3><p>完成后打开Windows Terminal找到：</p><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2f7bd8d86.png" alt="pic"></p><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2f838b7b1.png" alt="pic"></p><h2 id="3-Docker-安装">3.Docker 安装</h2><blockquote><p>Docker -&gt; 虚拟化容器技术。<br>Docker基于镜像，可以秒级启动各种容器。每一种容器都是一个完整的运行环境，容器之间互相隔离。</p></blockquote><ol><li><p><a href="https://www.docker.com/" title="官网地址">官网地址</a></p></li><li><p><a href="https://hub.docker.com/" title="公共仓库">公共仓库</a></p></li><li><p><a href="https://docs.docker.com/get-docker/" title="安装文档">安装文档</a></p></li><li><p><strong>下载Docker Desktop安装程序：</strong></p><ul><li>访问Docker官网下载页面：<a href="https://link.segmentfault.com/?enc=499FLQDYFvyYdd7cCtVu9A%3D%3D.MBdFIbVFnRUdUPcpdVZcA7hHAMCkjMVQbZW0Gwmi75DZZOEZnLuU9NNsfxJVDdlM">https://www.docker.com/get-started/</a></li><li>选择对应版本点击下载安装程序。</li><li>没猜错的话应该被墙了可以找我要安装包</li></ul></li></ol><p><img src="https://segmentfault.com/img/remote/1460000044606076" alt=""></p><ol start="4"><li><p><strong>运行安装程序：</strong></p><ul><li>双击下载的Docker Desktop安装文件。</li><li>在安装向导中，你可以根据个人喜好勾选是否希望建立Docker Desktop的快捷方式或者是否希望Docker Desktop随Windows启动等选项。</li></ul></li><li><p><strong>完成安装并重启：</strong></p><ul><li>完成安装向导后，重启计算机确保设置正确应用。</li></ul></li><li><p><strong>启动Docker Desktop：</strong></p><ul><li>在重启后，运行Docker Desktop。当它启动时，Docker图标会出现在系统托盘中。</li><li>系统托盘中的Docker图标表明Docker正在运行，并可能需要一点时间来启动服务。</li><li><strong>电脑要开VM虚拟化</strong></li><li><a href="https://blog.csdn.net/alwaysbefine/article/details/131277295">Windows 10 |VMware开启虚拟化的最全面说明_vmware虚拟化引擎-CSDN博客</a></li><li>开VM时BIOS不懂的不要瞎搞</li></ul></li><li><p><strong>配置Docker设置：</strong></p><ul><li>你可以右键点击系统托盘中的Docker图标，选择“Settings”来调整Docker的配置，如更改镜像存储位置、<strong>设置代理服务器</strong>等。</li></ul></li></ol><p>国内网络环境拉不下镜像的话就配置别的源<br><img src="https://free-img.400040.xyz/4/2024/10/14/670d2f87b1c1e.png" alt="pic"></p><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2f8cd2d48.png" alt="pic"></p><p>我用的这几个镜像站<br>配置环境要慎重</p><p>我的配置文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;builder&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;gc&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;defaultKeepStorage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;20GB&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;experimental&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://docker.m.daocloud.io&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://huecker.io&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://dockerhub.timeweb.cloud&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://noohub.ru&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="8"><li><p><strong>通过命令行界面测试Docker安装：</strong></p><ul><li>打开命令提示符、Powershell或任何你喜欢的终端。</li><li>输入命令 <code>docker --version</code> 来检查Docker版本，确保它已正确安装。</li><li>运行 <code>docker run hello-world</code> 来下载一个测试镜像，并在容器中运行，这可以验证Docker Daemon是否已正确启动并且可以创建容器。<br><img src="https://free-img.400040.xyz/4/2024/10/14/670d2faa11c5f.png" alt="pic"></li></ul></li></ol><h1>环境安装</h1><p>准备材料</p><ul><li><strong>Lua-devp2p-wireshark-dissector</strong>: <a href="https://github.com/jmkemp20/lua-devp2p-wireshark-dissector">GitHub链接</a></li><li><strong>PYDEVP2P</strong>: <a href="https://github.com/jmkemp20/pydevp2p">GitHub链接</a></li><li><strong>Lunatic-Python</strong>: <a href="https://github.com/jmkemp20/lunatic-python">GitHub链接</a></li><li><strong>Go-Ethereum</strong>: <a href="https://github.com/jmkemp20/go-ethereum">GitHub链接</a></li><li><strong>GETH-Docker</strong>: <a href="https://github.com/jmkemp20/geth-docker">GitHub链接</a></li></ul><h4 id="1-安装Wireshark和特定版本的LUA">1 安装Wireshark和特定版本的LUA</h4><p>linux的python版本要为3.10</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> update &amp;&amp; sudo apt-<span class="built_in">get</span><span class="built_in"> upgrade</span></span><br><span class="line"><span class="built_in"></span>sudo apt-<span class="built_in">get</span> install lua5.2 liblua5.2-dev wireshark python3.10</span><br></pre></td></tr></table></figure><h4 id="2-更改权限并复制Lunatic-Python-LUA-⇔-Python桥接二进制文件">2 更改权限并复制Lunatic Python LUA ⇔ Python桥接二进制文件</h4><p>python.so为文章最开始编译得来的</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod +<span class="keyword">x</span> <span class="keyword">python</span>.<span class="keyword">so</span></span><br><span class="line"><span class="keyword">cp</span> <span class="keyword">python</span>.<span class="keyword">so</span> /usr/local/lib/<span class="keyword">lua</span>/<span class="number">5.2</span>/</span><br></pre></td></tr></table></figure><h2 id="关于python-so是从哪来的："><strong>关于python.so是从哪来的：</strong></h2><p><strong><a href="http://xn--pythonlinux-r68ql0fu23ae4k921dmm6cki6agt2c.so">python在linux编译后的文件为.so</a></strong><br><strong>这个由编译Lunatic-Python: <a href="https://github.com/jmkemp20/lunatic-python">GitHub链接</a>得来</strong><br>不会编译的可以找我要我编译好的（</p><p><strong>如何编译见项目文档</strong>：</p><p>Lunatic Python 是一个双向桥接项目，它允许Python和Lua两种语言互相通信。这意味着你可以在Lua中调用Python代码，也可以在Python中调用Lua代码，甚至可以嵌套调用（如Lua中的Python再调用Lua）。这个项目的主要用途之一是为 <code>LUA-devp2p-dissector</code> 提供必要的工具，使其能够调用 <code>pydevp2p</code> 中的函数。</p><h3 id="项目起源">项目起源</h3><ul><li>这个项目是一个fork版本，原始项目来自 <code>labix-lunatic-python</code>。</li><li>另一个相关的版本由 <code>bastibe</code> 维护。</li></ul><h3 id="开始使用">开始使用</h3><h4 id="克隆仓库">克隆仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/lunatic-python.git &amp;&amp; <span class="built_in">cd</span> lunatic-python</span><br></pre></td></tr></table></figure><h4 id="确保安装了LUA-5-3">确保安装了LUA 5.3</h4><p>通过运行 <code>lua5.3</code> 来检查是否已经安装了正确的LUA版本<br><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fb14402b.png" alt="pic"></p><h4 id="查找你的Python版本">查找你的Python版本</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldconfig -<span class="keyword">p</span> | <span class="keyword">grep</span> <span class="keyword">python</span></span><br></pre></td></tr></table></figure><p>这条命令会列出系统中所有可用的Python库路径。你需要找到与你的Python版本相对应的路径。</p><h4 id="准备编译（构建）">准备编译（构建）</h4><p>根据上一步输出的Python版本信息来配置CMake：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cmake -B.<span class="regexp">/build -H. -DPYTHON_INCLUDE_DIR=/u</span>sr<span class="regexp">/include/</span>python3.<span class="number">10</span> \</span><br><span class="line">  -DPYTHON_LIBRARY=<span class="regexp">/usr/</span>lib<span class="regexp">/x86_64-linux-gnu/</span>libpython3.<span class="number">10</span>.so</span><br></pre></td></tr></table></figure><p>使用的是Python 3.10</p><h4 id="编译（构建）">编译（构建）</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake <span class="params">--build</span> <span class="string">./build</span></span><br></pre></td></tr></table></figure><h3 id="使用">使用</h3><h4 id="定位二进制文件">定位二进制文件</h4><p>构建完成后，你会在 <code>build/bin/</code> 目录下找到两个重要的文件：</p><ul><li><code>python.so</code> 用于在Lua中调用Python</li><li><code>lua.so</code> 用于在Python中调用Lua</li><li>找不到直接搜</li></ul><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fb4591cd.png" alt="pic"></p><p>然后把编译好的文件移到论文提到的目录下（见上文<br>![pic](./C:/Users/Think/Desktop/大学项目其三/环境安装/Pasted image 20241014220542.png)</p><h4 id="3-克隆LUA解码器和PYDEVP2P项目">3 克隆LUA解码器和PYDEVP2P项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/lua-devp2p-wireshark-dissector.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/pydevp2p.git</span><br></pre></td></tr></table></figure><h4 id="4-从源代码安装PYDEVP2P-PIP包">4 从源代码安装PYDEVP2P PIP包</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd pydevp2p</span><br><span class="line">pip <span class="keyword">install</span> -e .</span><br><span class="line">sudo pip <span class="keyword">install</span> -e .</span><br></pre></td></tr></table></figure><h4 id="5-创建Wireshark插件目录（本地用户和root）">5 创建Wireshark插件目录（本地用户和root）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~<span class="regexp">/.local/</span>lib<span class="regexp">/wireshark/</span>plugins</span><br><span class="line">sudo mkdir -p <span class="regexp">/usr/</span>local<span class="regexp">/lib/</span>wireshark/plugins</span><br></pre></td></tr></table></figure><h4 id="Step-6-符号链接或复制-lua解码器文件到Wireshark插件目录">Step 6) 符号链接或复制.lua解码器文件到Wireshark插件目录</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ln -s &lt;location of cloned dissector&gt;<span class="regexp">/rlpx.lua ~/</span>.local<span class="regexp">/lib/</span>wireshark<span class="regexp">/plugins/</span>rlpx.lua</span><br><span class="line">ln -s &lt;location of cloned dissector&gt;<span class="regexp">/discovery.lua ~/</span>.local<span class="regexp">/lib/</span>wireshark<span class="regexp">/plugins/</span>discovery.lua</span><br><span class="line">sudo ln -s &lt;location of cloned dissector&gt;<span class="regexp">/rlpx.lua /u</span>sr<span class="regexp">/local/</span>lib<span class="regexp">/wireshark/</span>plugins/rlpx.lua</span><br><span class="line">sudo ln -s &lt;location of cloned dissector&gt;<span class="regexp">/discovery.lua /u</span>sr<span class="regexp">/local/</span>lib<span class="regexp">/wireshark/</span>plugins/discovery.lua</span><br></pre></td></tr></table></figure><p><strong>可以直接复制这些.lua文件而不是创建符号链接</strong>。<br>终端里找不到文件用文件资源管理器搜</p><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fb720710.png" alt="pic"></p><p>好的，你提供的步骤是安装自定义的 Go Ethereum 客户端。以下是详细的步骤来从头开始安装和运行自定义的 Go Ethereum 客户端：</p><h3 id="Live-GETH-Docker-Startup">Live GETH Docker Startup</h3><h4 id="Step-1-确保Docker和Docker-Compose已安装并正在运行">Step 1) 确保Docker和Docker Compose已安装并正在运行</h4><p>检查Docker版本：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="comment">--version</span></span><br></pre></td></tr></table></figure><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fbc87f5d.png" alt="pic"></p><p>检查Docker Compose版本：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose <span class="comment">--version</span></span><br></pre></td></tr></table></figure><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fbf0229a.png" alt="pic"></p><h4 id="Step-2-克隆GETH-Docker存储库">Step 2) 克隆GETH-Docker存储库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/geth-docker.git</span><br><span class="line"><span class="built_in">cd</span> geth-docker</span><br></pre></td></tr></table></figure><h4 id="Step-3-构建自定义docker镜像">Step 3) 构建自定义docker镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./build-dockers.sh</span><br></pre></td></tr></table></figure><h4 id="Step-4-启动路由器容器">Step 4) 启动路由器容器</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker-compose up -d bridge-router</span></span><br></pre></td></tr></table></figure><h4 id="Step-5-打开Wireshark并连接到网络接口">Step 5) 打开Wireshark并连接到网络接口</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo wireshark</span></span><br></pre></td></tr></table></figure><h4 id="Step-6-依次启动每个GETH节点-客户端容器">Step 6) 依次启动每个GETH节点/客户端容器</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker-compose <span class="keyword">up</span> -d geth-ubuntu-bootnode</span><br><span class="line">docker-compose <span class="keyword">up</span> -d geth-client-<span class="number">1</span></span><br><span class="line">docker-compose <span class="keyword">up</span> -d geth-client-<span class="number">2</span></span><br><span class="line">docker-compose <span class="keyword">up</span> -d geth-client-<span class="number">3</span></span><br></pre></td></tr></table></figure><p><img src="https://free-img.400040.xyz/4/2024/09/22/66f03893a6823.png" alt="pic"></p><hr><h1><strong>接下来新开一个命令行窗口来做</strong></h1><p><strong>论文原文操作：</strong></p><h3 id="7-5-Installing-the-Custom-GO-Ethereum-Client-from-Scratch">7.5 Installing the Custom GO Ethereum Client from Scratch</h3><h4 id="Step-1-克隆自定义GO-Ethereum源代码">Step 1) 克隆自定义GO Ethereum源代码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/go-ethereum.git</span><br></pre></td></tr></table></figure><h4 id="Step-2-编译GETH或其他所有GO-Ethereum工具">Step 2) 编译GETH或其他所有GO Ethereum工具</h4><p>编译GETH是个大坑，出问题的话可以看文档后面有讲</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="keyword">go</span>-ethereum</span><br><span class="line"><span class="keyword">make</span> geth</span><br></pre></td></tr></table></figure><h4 id="Step-3-运行GETH">Step 3) 运行GETH</h4><p>文档是</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">geth</span></span><br></pre></td></tr></table></figure><p>就行，看终端geth编译完后的输出来定，我这边的是</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="regexp">/build/</span>bin/geth</span><br></pre></td></tr></table></figure><p>不出问题的话终端没报错这里就成功了（一般不太可能，出问题见下</p><p>我的操作：</p><h1>编译geth</h1><h3 id="1-克隆自定义的-Go-Ethereum-源代码">1. 克隆自定义的 Go Ethereum 源代码</h3><p>克隆自定义的 Go Ethereum 源代码仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/go-ethereum.git</span><br></pre></td></tr></table></figure><h3 id="2-安装-Geth-或所有-Go-Ethereum-工具">2. 安装 Geth 或所有 Go Ethereum 工具</h3><p>进入克隆的 <code>go-ethereum</code> 目录，并编译 <code>geth</code> 或所有工具。</p><h4 id="安装-Go-1-20（版本好像会影响编译，翻了下issue，我当时用的1-20">安装 Go 1.20（版本好像会影响编译，翻了下issue，我当时用的1.20</h4><p>确保你已经安装了 Go 1.20 或更高版本。如果没有，请按照以下步骤安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 Go 1.20</span></span><br><span class="line">wget https://mirrors.aliyun.com/golang/go1.20.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压并安装</span></span><br><span class="line">sudo tar -C /usr/local -xzf go1.20.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line">nano ~/.bashrc</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">nano ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/local/go</span><br><span class="line"><span class="built_in">export</span> GOPATH=<span class="variable">$HOME</span>/go</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$GOPATH</span>/bin:<span class="variable">$GOROOT</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 Go 版本</span></span><br><span class="line">go version</span><br></pre></td></tr></table></figure><h4 id="编译-geth-或所有工具">编译 <code>geth</code> 或所有工具</h4><p>进入 <code>go-ethereum</code> 目录并编译 <code>geth</code> 或所有工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> go-ethereum</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理 Go 模块缓存</span></span><br><span class="line">go clean -modcache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 Go 模块</span></span><br><span class="line">go mod tidy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 geth</span></span><br><span class="line">make geth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你想编译所有工具</span></span><br><span class="line">make all</span><br></pre></td></tr></table></figure><p><strong>如果没猜错的话国内网络环境go下载依赖会卡住</strong><br><img src="https://free-img.400040.xyz/4/2024/10/14/670d2eff34334.png" alt="pic"><br>卡在这里</p><p>我看的教程</p><h4 id="解决-go-get-golang-org-x-包失败"><a href="https://www.cnblogs.com/shockerli/p/go-get-golang-org-x-solution.html" title="发布于 2019-02-24 17:24">解决 go get golang.org/x 包失败</a></h4><blockquote><p><strong>GOPROXY</strong><br>我们知道从 <code>Go 1.11</code> 版本开始，官方支持了 <code>go module</code> 包依赖管理工具。<br>其实还新增了 <code>GOPROXY</code> 环境变量。如果设置了该变量，下载源代码时将会通过这个环境变量设置的代理地址，而不再是以前的直接从代码库下载。这无疑对我等无法科学上网的开发良民来说是最大的福音。<br>更可喜的是，<a href="https://github.com/goproxyio/goproxy">goproxy.io</a> 这个开源项目帮我们实现好了我们想要的。该项目允许开发者一键构建自己的 <code>GOPROXY</code> 代理服务。同时，也提供了公用的代理服务 <code>https://goproxy.io</code>，我们只需设置该环境变量即可正常下载被墙的源码包了：</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GOPROXY=https://goproxy.io</span><br></pre></td></tr></table></figure><p>也可以通过置空这个环境变量来关闭，<code>export GOPROXY=</code>。</p><p>对于 Windows 用户，可以在 <code>PowerShell</code> 中设置：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$env</span>:GOPROXY = <span class="string">&quot;https://goproxy.io&quot;</span></span><br></pre></td></tr></table></figure><p>我这边这样做能正常下载</p><h3 id="3-运行-Geth">3. 运行 Geth</h3><p>编译完成后，你可以运行 <code>geth</code>。确保 <code>geth</code> 可执行文件在你的 <code>PATH</code> 中，或者直接在 <code>go-ethereum/build/bin</code> 目录下运行它。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果 geth 在 PATH 中</span></span><br><span class="line">geth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 geth 不在 PATH 中</span></span><br><span class="line">./build/bin/geth</span><br></pre></td></tr></table></figure><p>成功安装并运行自定义的 Go Ethereum 客户端</p><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fcb1430b.png" alt="pic"></p><hr><h2 id="最后的截图">最后的截图</h2><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fcce60fb.png" alt="pic"></p><p><img src="https://free-img.400040.xyz/4/2024/10/14/670d2fcea959a.png" alt="pic"></p>]]></content>
    
    
    <summary type="html">此文件为历史版本，仅参考用</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>九月</title>
    <link href="https://zhongye1.github.io/posts/fd12c93d.html"/>
    <id>https://zhongye1.github.io/posts/fd12c93d.html</id>
    <published>2024-09-26T08:30:15.000Z</published>
    <updated>2024-09-25T16:10:50.811Z</updated>
    
    <content type="html"><![CDATA[<hr><div class="tip "><p>9月1日</p></div><img src="https://pic4.zhimg.com/80/v2-5415b3941d1e8c38796689255c41f7c7_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pic2.zhimg.com/80/v2-b741d4b5996a9d758d16ce1887a15979_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pic1.zhimg.com/80/v2-038b40ade38253649ea6c49bd73f4578_720w.webp" alt="img" style="zoom:50%;" /><p>满校区跑，开学焦虑了</p><p>顺便混了下图书馆,借了几本关于网站建设的书。</p><p>翻了下RSS订阅时，读到一段话</p><blockquote><p>今天好像有一股力量在努力把这些超越性的东西从我们的社会生活里清理出去。</p><p>人很渺小，但是人不应该因为自己渺小就要消灭所有伟大。</p></blockquote><blockquote><blockquote><p><a href="https://lenciel.com/2024/08/bu-er-qi-xi/">不二与偏要二 - @Lenciel</a></p></blockquote></blockquote><hr><div class="tip "><p>9月2日</p></div><p>概率论挂科率高？我卷死你</p><p>重装了下python</p><p>大一完全是瞎搞，把一堆东西瞎装，现在重新清理一下</p><p><img src="https://pic1.zhimg.com/80/v2-60f4739c4831e87cdabcc073c6bb9b56_720w.webp" alt="img"></p><p>毕竟要开课了</p><p>虽然觉得VScode更好用</p><p>日后再说</p><hr><div class="tip "><p>9月3日</p></div><p>老师推荐的logseq做笔记没博客好用</p><p>都是写markdown，博客还支持HTML CSS JS 各种页面和嵌入</p><p>不过这个归档页面不错</p><p><img src="https://free-img.400040.xyz/4/2024/09/03/66d72d9cc24ea.png" alt="img"></p><hr><div class="tip "><p>9月4日</p></div><p>一周只有周三晚上没课，难得的没课的时间，去了下黄埔</p><p><img src="https://pic1.zhimg.com/80/v2-9f00a60097520cd098ba2595850b6ec8_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-b4339a2f1a73d24af123d0425d6133f0_720w.webp" alt="img"></p><p>参观了一下四八零一工厂和军校旧址</p><hr><div class="tip "><p>9月5日</p></div><p>我觉得当初选课时的自己有点毛病</p><p>选那么多那么杂生怕期末不会死</p><p>反正现在完蛋了</p><p>之前的笔记本还要找一下</p><p>然后周末只能泡图书馆了</p><p>最近开销挺多，到时候看看倒卖个人简历网页能不能赚钱</p><img src="https://pic2.zhimg.com/80/v2-5570178f83684b066dfd65d5255fe6a5_720w.webp" alt="img" style="zoom:50%;" /><hr><div class="tip "><p>9月8日</p></div><p>突发奇想想去实验室打杂</p><p>犯浑啊…</p><p>一想我大学以来一直在犯浑也不差这一下</p><p>反正邮件已经发了</p><p>那剩下要做的只有等死了…</p><p>…</p><p>感觉大一上挂科的高代永远是大学阴影了…</p><p>好像还得罪了专业负责人（被嫌弃了</p><ul><li></li></ul><p>无思绪，遂出门散心</p><img src="https://pic4.zhimg.com/80/v2-858ceb75cce1e638a725d26c1cabdb13_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pica.zhimg.com/80/v2-bf889a8b690a9fe2af6f0ba37258fe66_720w.webp" alt="img" style="zoom:50%;" /><p>大二会怎样呢</p><p>过去和未来的压力都无形无色的加于自己</p><p>然后没办法应对</p><p>能力不够</p><ul><li></li></ul><p>希望这些局面会有所改观</p><p>在珠江边如是想道</p><ul><li></li></ul>    <div id="aplayer-FPRnLDJD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1860234957" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>那今天算是结束了，下周是更满的课程</p><p>先睡了罢</p><p>以后有的过的…</p><hr><div class="tip "><p>9月11日</p></div><p>九月份快中秋了还这么热</p><p>也许当初我回了湖北读大学的话</p><p>在这个时候天气会不会凉快点</p><p>顺便跑长江边或者去看东湖</p><p>天气会更快冷下来而且冬天会下雪</p><p>回老家也方便</p><ul><li></li></ul><p>不过没有机会说如果了，这是我在广州的第二年，今年入秋估计特别晚</p><p>而且冬天不会下雪的</p><p>毕竟南漂嘛</p><p>…</p><hr><p>放一首歌，另外希望自己能早点走出来</p><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=861659785&bvid=BV1nV4y1w74h&cid=935573523&autoplay=0" allowfullscreen="allowfullscreen" width="100%" height="500" scrolling="no" frameborder="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts" width="100%" autoplay="0"></iframe><p><em>如果可以 就由我来改变世界，</em><br><em>至于消灭战争，</em><br><em>或许有些太过伟大，</em><br><em>不过偶尔也会如此奢望，</em><br><em>演员明星什么的 本就离我遥远，</em><br><em>且不谈这些，</em><br><em>光是在你面前我都扭扭捏捏，</em><br><em>一定很令人为难吧…</em><br><em>啊…</em><br><em>是哪里弄错了吗？</em><br><em>我不知道，</em><br><em>于是左右摇晃 摇晃，</em><br><em>本就一无所有 可心痛依旧，</em><br><em>我们的心总会连在一起，</em><br><em>然后左右冲撞 冲撞，</em><br><em>冲破冻结的岩层，</em><br><em>奔向远方…</em></p><p>「我們出生本來就一無所有，卻因為害怕犯錯與失去些什麼而逐漸變得膽小。即便如此還是下定唱出要赤裸的在這世界中翻滾的決心。」</p><p><strong>啊…那么，谢谢收听！</strong></p><p><strong>波奇酱和结束乐队在摄像机前的日常到这里就结束了，而我们的日常还在继续。</strong></p><hr><div class="tip "><p>9月12日</p></div><p>成功了</p><p>找到了愿意带科研项目的老师</p><p>总之先研究一些材料罢</p><p>路还长着，睡了</p><p>祝顺利…</p><p>另外明天建一个新页面用于存放笔记</p><img src="https://pic2.zhimg.com/80/v2-18131b90cf89b2997d895cae47d77419_720w.webp" alt="img" style="zoom:33%;" /><hr><div class="tip "><p>9月13日</p></div><p>一直在犯浑</p><p>当初那么选课真的是生怕自己期末寄不了</p><p>觉得自己学的不够好还想再学一遍（</p><p>幸好改了（逃</p><p>我的大学生活已经够丧了不想再添油加醋了（</p><p>然后的话就是不能再摸鱼了</p><p>这个项目要做起来</p><p>好像周末要汇报啥的</p><p><s>过个中秋再看罢</s></p><p>有时间就研究下</p><p><s>结果听了一晚上摇滚</s></p>    <div id="aplayer-MBIqwtJE" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="8926752857" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><img src="https://pic2.zhimg.com/80/v2-fe88022d1ddd727c237dec5cc1706e47_720w.webp" alt="img" style="zoom:50%;" /><center>古早前存的，找了好久的图</center><p>此外中秋记得回来带个路由器到学校研究</p><p>技术宅拯救世界</p><hr><div class="tip "><p>9月16日</p></div><p>路由的研究告一段落性的失败了</p><p>技术难度不说实用性也低不如直接接网线</p><p>计网原理还得学</p><p>目前要推进的是手头上另外一个项目</p><p>此外</p><p>想去漫展打工赚点零花费顺便薅场地门票</p><p>不过CICF招临时工的话又是投简历又是面试是否有点太夸张了</p><img src="https://pic4.zhimg.com/80/v2-407795a7f2413a65fb586d900ba9430b_720w.webp" alt="img" style="zoom:33%;" /><hr><div class="tip "><p>9月17日</p></div><p>越是冷峻的环境越是要让人要有所作为</p><p>总要有有梦想有情怀有实力的人来解决问题</p><p>面对现实的一堆不平更是如此</p><p>·</p><p>另外…</p><p>在中秋之际祝自己节日快乐</p><hr><div class="tip "><p>9月19日</p></div><p>事情好多想鸽又不敢鸽</p><p>（倒</p><hr><div class="tip "><p>9月22日</p></div><p>今日秋分</p><p>昨天全广州到处跑忙的回宿舍都十一点了没时间写博客</p><p>最近很多事情</p><p>目前最近的那批应该差不多了</p><p>希望能被录上</p><br><p><br><br></p><br><p>黑眼圈越发严重，不过戴眼镜的话应该看不出来</p><p>近日一出门就胃痛</p><p>剩下的一周是课程，课程，汇报，调休，课程和打工</p><p>如果那边招我的话</p><br><br><p>然后是十月了</p><br><img src="https://pic1.zhimg.com/80/v2-9a611cade31d588460bbff000a6de02a_720w.webp" alt="img" style="zoom:50%;" /><img src="https://pic4.zhimg.com/80/v2-ba58010c28de0dfc2ad8bd121210e42d_720w.webp" alt="img" style="zoom:50%;" /><img src="https://picx.zhimg.com/80/v2-d6fc4d388019d1984d6f0e7b460a5e51_720w.webp" alt="img" style="zoom:50%;" /><br><center>今年故乡将先日入冬</center><hr><div class="tip "><p>9月25日</p></div><p>做项目…</p><p>分享一首歌</p>    <div id="aplayer-ImIMqXSC" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1941005079" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
    
    
    <summary type="html">即便如此還是下定唱出在這世界中翻滾的決心</summary>
    
    
    
    <category term="随记" scheme="https://zhongye1.github.io/categories/%E9%9A%8F%E8%AE%B0/"/>
    
    
    <category term="随记" scheme="https://zhongye1.github.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日志2024.9.25（待解决）</title>
    <link href="https://zhongye1.github.io/posts/e5690f5.html"/>
    <id>https://zhongye1.github.io/posts/e5690f5.html</id>
    <published>2024-09-25T16:49:26.000Z</published>
    <updated>2024-09-25T16:59:47.617Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="在解析rlpx时出现lua错误">在解析rlpx时出现lua错误</h2><p>在帧列表中，有一个帧（编号 1561）出现了 Lua 错误。具体来说，错误信息是：“Lua Error: /root/local/lib/wireshark/plugins/rlpx.lua:97: attempt to index local ‘dec_msg’ (a nil value)”。在解码器脚本 <code>rlpx.lua</code> 的第 97 行尝试访问一个名为 <code>dec_msg</code> 的局部变量，但它是一个空值（nil），导致解码器无法成功解析数据包</p><p><img src="https://pic1.zhimg.com/80/v2-21289281388f179624bb09ba37c1cb60_720w.webp" alt="img"></p><p><img src="https://pic4.zhimg.com/80/v2-c9e81041466be372649c07a423f7f737_720w.webp" alt="img"></p><p>rlpx.lua代码如下，lua版本为Lua 5.4.7 ：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> python = <span class="built_in">require</span> <span class="string">&#x27;python&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- Temporary for development</span></span><br><span class="line"><span class="comment">-- local sys = python.import &#x27;sys&#x27;</span></span><br><span class="line"><span class="comment">-- sys.path.append(&#x27;/home/jkemp/cs700/pydevp2p/&#x27;)</span></span><br><span class="line"><span class="comment">-- End of Temporary for development</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> rlpxBridge = python.import <span class="string">&#x27;pydevp2p.bridge&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- create a new dissector</span></span><br><span class="line"><span class="keyword">local</span> NAME = <span class="string">&quot;rlpx&quot;</span></span><br><span class="line"><span class="keyword">local</span> PORT = <span class="number">30305</span></span><br><span class="line"><span class="keyword">local</span> rlpx = Proto(NAME, <span class="string">&quot;Ethereum RLPx Protocol&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> fields = rlpx.fields</span><br><span class="line">fields.auth_size = ProtoField.uint16(NAME .. <span class="string">&quot;.auth_size&quot;</span>, <span class="string">&quot;Auth Size&quot;</span>)</span><br><span class="line">fields.ack_size = ProtoField.uint16(NAME .. <span class="string">&quot;.ack_size&quot;</span>, <span class="string">&quot;Ack Size&quot;</span>)</span><br><span class="line">fields.body = ProtoField.bytes(NAME .. <span class="string">&quot;.body&quot;</span>, <span class="string">&quot;Data&quot;</span>)</span><br><span class="line">fields.frame_header = ProtoField.bytes(NAME .. <span class="string">&quot;.frame_header&quot;</span>, <span class="string">&quot;Frame Header&quot;</span>)</span><br><span class="line">fields.frame_body = ProtoField.bytes(NAME .. <span class="string">&quot;.frame_body&quot;</span>, <span class="string">&quot;Frame Body&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> known_ports = &#123; <span class="number">30303</span>, <span class="number">30304</span>, <span class="number">30305</span>, <span class="number">30306</span>, <span class="number">30307</span>, <span class="number">30308</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">table_has_value</span><span class="params">(tab, val)</span></span></span><br><span class="line">    <span class="keyword">for</span> _, value <span class="keyword">in</span> <span class="built_in">ipairs</span>(tab) <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">if</span> value == val <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">local</span> <span class="function"><span class="keyword">function</span> <span class="title">array_iterator</span><span class="params">(array, len)</span></span></span><br><span class="line">    <span class="comment">-- This lets us iterate over a c object (like a python array)</span></span><br><span class="line">    <span class="keyword">local</span> index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">local</span> count = <span class="built_in">len</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- The closure function is returned</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">        index = index + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> index &lt;= count</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- return the current element of the iterator</span></span><br><span class="line">            <span class="keyword">return</span> array[index]</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- main dissect packet function</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rlpx.dissector</span><span class="params">(tvb, pinfo, tree)</span></span></span><br><span class="line">    <span class="keyword">local</span> subtree = tree:add(rlpx, tvb())</span><br><span class="line">    <span class="keyword">local</span> offset = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">-- show protocol name in protocol column</span></span><br><span class="line">    pinfo.cols.protocol = rlpx.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> srcaddr = <span class="built_in">tostring</span>(pinfo.src)</span><br><span class="line">    <span class="keyword">local</span> dstaddr = <span class="built_in">tostring</span>(pinfo.dst)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">local</span> payload = <span class="built_in">tostring</span>(tvb:bytes())</span><br><span class="line"></span><br><span class="line">    <span class="comment">-- dissect field one by one, and add to protocol tree</span></span><br><span class="line">    <span class="keyword">local</span> auth_size = tvb(offset, <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> (tvb:<span class="built_in">len</span>() - auth_size:int() == <span class="number">2</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="keyword">if</span> (table_has_value(known_ports, pinfo.src_port)) <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- This is most likely a handshake AUTH-ACK packet</span></span><br><span class="line">            offset = offset + <span class="number">2</span></span><br><span class="line">            subtree:add(fields.ack_size, auth_size)</span><br><span class="line">            pinfo.cols.info:set(pinfo.src_port .. <span class="string">&quot; → &quot;</span> .. pinfo.dst_port .. <span class="string">&quot; [HANDSHAKE] AUTH ACK&quot;</span>)</span><br><span class="line">            <span class="comment">-- print(payload, dstNode)</span></span><br><span class="line">            <span class="keyword">local</span> dec_msg = rlpxBridge.handleRLPxHandshakeMsg(srcaddr, dstaddr, payload, pinfo.visited, pinfo.number)</span><br><span class="line">            <span class="keyword">local</span> payloadtree = subtree:add(fields.body, tvb(offset))</span><br><span class="line">            payloadtree:set_text(<span class="string">&quot;Handshake AUTH ACK&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> element <span class="keyword">in</span> array_iterator(dec_msg, dec_msg[<span class="number">0</span>]) <span class="keyword">do</span></span><br><span class="line">                payloadtree:add(element)</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">elseif</span> (table_has_value(known_ports, pinfo.dst_port)) <span class="keyword">then</span></span><br><span class="line">            <span class="comment">-- This is most likely a handshake AUTH packet</span></span><br><span class="line">            offset = offset + <span class="number">2</span></span><br><span class="line">            subtree:add(fields.auth_size, auth_size)</span><br><span class="line">            pinfo.cols.info:set(pinfo.src_port .. <span class="string">&quot; → &quot;</span> .. pinfo.dst_port .. <span class="string">&quot; [HANDSHAKE] AUTH INIT&quot;</span>)</span><br><span class="line">            <span class="comment">-- print(payload, dstNode)</span></span><br><span class="line">            <span class="keyword">local</span> dec_msg = rlpxBridge.handleRLPxHandshakeMsg(srcaddr, dstaddr, payload, pinfo.visited, pinfo.number)</span><br><span class="line">            <span class="keyword">local</span> payloadtree = subtree:add(fields.body, tvb(offset))</span><br><span class="line">            <span class="keyword">for</span> element <span class="keyword">in</span> array_iterator(dec_msg, dec_msg[<span class="number">0</span>]) <span class="keyword">do</span></span><br><span class="line">                payloadtree:add(element)</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            subtree:add(fields.body, tvb(offset))</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">local</span> dec_msg = rlpxBridge.handleRLPxMsg(srcaddr, dstaddr, payload, pinfo.visited, pinfo.number)</span><br><span class="line">        <span class="keyword">local</span> frame_header = dec_msg[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">local</span> frame_body = dec_msg[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">local</span> frame_type = dec_msg[<span class="number">2</span>]</span><br><span class="line">        <span class="comment">-- Set the column information to the Frame Type</span></span><br><span class="line">        <span class="keyword">if</span> frame_type ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            pinfo.cols.info:set(pinfo.src_port .. <span class="string">&quot; → &quot;</span> .. pinfo.dst_port .. <span class="string">&quot; &quot;</span> .. frame_type)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="comment">-- Show the frame header information (if available) in Wireshark</span></span><br><span class="line">        <span class="keyword">if</span> frame_header ~= <span class="literal">nil</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> frame_header_tree = subtree:add(fields.frame_header, tvb(<span class="number">0</span>, frame_header.headerSize))</span><br><span class="line">            frame_header_tree:add(<span class="string">&quot;Decrypted Header Data:&quot;</span>, frame_header.header)</span><br><span class="line">            frame_header_tree:add(<span class="string">&quot;Header MAC:&quot;</span>, frame_header.headerMac)</span><br><span class="line">            frame_header_tree:add(<span class="string">&quot;Frame Body MAC:&quot;</span>, frame_header.frameMac)</span><br><span class="line">            frame_header_tree:add(<span class="string">&quot;Frame Size:&quot;</span>, frame_header.frameSize)</span><br><span class="line">            frame_header_tree:add(<span class="string">&quot;Read Size:&quot;</span>, frame_header.readSize)</span><br><span class="line">            frame_header_tree:add(<span class="string">&quot;Header Data:&quot;</span>, frame_header.headerData)</span><br><span class="line">            pinfo.cols.info:append(<span class="string">&quot; Len=&quot;</span> .. frame_header.readSize)</span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">        <span class="comment">-- Show the frame body information (if available) in Wireshark</span></span><br><span class="line">        <span class="keyword">if</span> frame_header ~= <span class="literal">nil</span> <span class="keyword">and</span> frame_type ~= <span class="literal">nil</span> <span class="keyword">and</span> frame_body ~= <span class="literal">nil</span> <span class="keyword">and</span> frame_body[<span class="number">0</span>] &gt; <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">            <span class="keyword">local</span> frame_body_tree = subtree:add(fields.frame_body, tvb(frame_header.headerSize))</span><br><span class="line">            <span class="keyword">for</span> element <span class="keyword">in</span> array_iterator(frame_body, frame_body[<span class="number">0</span>]) <span class="keyword">do</span></span><br><span class="line">                frame_body_tree:add(element)</span><br><span class="line">            <span class="keyword">end</span></span><br><span class="line">        <span class="keyword">end</span></span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- register this dissector</span></span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(PORT, rlpx)</span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(<span class="string">&quot;30303&quot;</span>, rlpx)</span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(<span class="string">&quot;30304&quot;</span>, rlpx)</span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(<span class="string">&quot;30305&quot;</span>, rlpx)</span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(<span class="string">&quot;30306&quot;</span>, rlpx)</span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(<span class="string">&quot;30307&quot;</span>, rlpx)</span><br><span class="line">DissectorTable.get(<span class="string">&quot;tcp.port&quot;</span>):add(<span class="string">&quot;30308&quot;</span>, rlpx)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不知道怎么改，不懂lua</p><p>可能是lua版本问题，改天看下文档</p><p><img src="https://pic4.zhimg.com/80/v2-c9e81041466be372649c07a423f7f737_720w.webp" alt="img"></p><p><img src="https://pica.zhimg.com/80/v2-e8cfe5272808d7d34394ac62edb904f0_720w.webp" alt="img"></p><p><img src="https://pic1.zhimg.com/80/v2-21289281388f179624bb09ba37c1cb60_720w.webp" alt="img"></p>]]></content>
    
    
    <summary type="html">项目复现日志(lua错误)</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>创建一个针对Ethereum网络的协议解包器</title>
    <link href="https://zhongye1.github.io/posts/4fd6dc47.html"/>
    <id>https://zhongye1.github.io/posts/4fd6dc47.html</id>
    <published>2024-09-25T16:13:00.000Z</published>
    <updated>2024-09-25T16:57:54.681Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Enabling-security-analysis-and-education-of-the-Ethereum-platform"><strong>Enabling security analysis and education of the Ethereum platform</strong></h2><p>本篇论文旨在探讨如何通过创建一个Wireshark网络包解码器来分析和教育以太坊平台的安全性。使用了定制化的私人以太坊Docker网络来促进Go Ethereum执行客户端之间的通信，并使Wireshark解码器能够捕获实时网络数据。最后，作者还使用了解码器来比较DiscoveryV4和DiscoveryV5的区别，并跟踪RLPx协议中的交易在网络上的传输过程。本文的研究方法包括创建Wireshark解码器、使用定制化的私人以太坊Docker网络以及对比不同版本的DiscoveryV4和DiscoveryV5协议。最终结果表明，该解码器可以有效地帮助人们理解和分析以太坊平台的安全性和网络流量。</p><h3 id="方法描述">方法描述</h3><p>该论文提出了一种新的网络包解码器（dissector），用于分析以太坊DEVP2P协议套件中的数据包。该解码器能够解析UDP基的DiscoveryV4、DiscoveryV5以及RLPx协议，并支持其子协议ETH和SNAP的消息能力。这个解码器使用Wireshark作为平台来实现，通过拦截网络流量并提供实时视图，可以识别协议、解码数据、跟踪流和对话、计算统计信息等。</p><h3 id="方法改进">方法改进</h3><p>传统的网络包解码器通常用于调试、协议分析、安全性和可扩展性分析以及教育目的。目前有两种已知的以太坊DEVP2P协议解码器：一个是基于Wireshark插件引擎使用LUA编程语言构建的；另一个是使用C编程语言编译Wireshark源代码而构建的。然而，这两种解码器都存在一些限制，只支持加密发现V4，而不支持在EIP-868中于2019年10月发布的新型数据包类型。此外，它们也不支持DiscoveryV5和RLPx及其任何子协议，如ETH和SNAP。</p><p>这两个项目都已经被放弃，原因是复杂度高，需要社区完成这项工作。由于RLPx的数据包解码过程比较复杂，因为TCP连接是使用ECIES（椭圆曲线集成加密方案）加密的，因此需要私钥才能解密通信。私钥因素包括我们的私钥、节点的公钥以及一个随机生成的临时密钥。</p><h3 id="解决的问题">解决的问题</h3><p>该解码器解决了现有的解码器无法处理新型数据包类型的问题，同时也填补了DiscoveryV5和RLPx及其子协议的安全性和性能分析方面的空白。此外，该解码器还可以帮助证明其价值，为社区和教育者提供更深入的分析，包括安全性和性能差异的比较，以及交易和块传播等方面的研究。</p><h2 id=""></h2><h3 id="论文实验">论文实验</h3><p>本文介绍了作者使用Wireshark创建一个针对Ethereum网络的协议解包器，并对不同协议进行了分析和展示。在实验中，作者构建了一个私有开发网络，并通过MetaMask连接了该网络上的账户，演示了如何在两个节点之间进行交易。以下是每个实验的详细介绍：</p><ol><li><p>实验目的：创建Wireshark解包器并分析不同协议</p><p>在这个实验中，作者的主要目的是创建一个Wireshark解包器来解析Ethereum网络中的不同协议。这包括DiscoveryV4、DiscoveryV5和RLPx协议以及它们的子协议ETH和SNAP。作者还创建了一个名为PYDEVP2P的Python库作为后台支持，提供大部分解码、解密和数据布局工具，以帮助Wireshark显示数据包信息。</p></li><li><p>实验步骤：构建私有开发网络并进行交易</p><p>在这个实验中，作者构建了一个私有开发网络，其中包括一个Bootnode和三个节点。每个节点都运行在一个Docker容器中，并且使用GETH客户端。作者使用MetaMask连接到该网络，并从不同的账户向另一个账户发送了200个ETH。整个过程被记录下来并在后续章节中进行分析。</p></li><li><p>实验结果：性能和安全性的分析</p><p>在这个实验中，作者分析了DiscoveryV4和DiscoveryV5协议的性能和安全性，并比较了它们与RLPx协议的不同之处。此外，作者还对实际交易进行了详细的分析，以了解在网络层面上发生了什么。</p></li></ol><p>总的来说，本文旨在展示如何使用Wireshark创建一个用于Ethereum网络的协议解包器，并展示了如何在私有开发网络上进行交易。作者还对不同协议的性能和安全性进行了分析，以便更好地理解Ethereum网络的工作原理。</p><p><img src="https://damo-moshicloud-test.oss-cn-hangzhou.aliyuncs.com/document/testcase/dingding/zhiwen_cases/1286829898522558464/1286829898522558464_cut_Table_1.png" alt="table_1"></p><p><img src="https://damo-moshicloud-test.oss-cn-hangzhou.aliyuncs.com/document/testcase/dingding/zhiwen_cases/1286829898522558464/1286829898522558464_cut_Table_2.png" alt="table_2"></p><h3 id="总结">总结</h3><p>该论文主要介绍了以太坊网络及其相关协议，并通过两个现有分解器的比较，探讨了如何使用分解器来解析网络数据包以及理解底层协议。该论文的优点包括：</p><ul><li>全面深入地介绍了以太坊网络及协议，包括公共和私人网络、节点类型、网络协议等。</li><li>提供了两种现有的分解器的比较，帮助读者了解它们之间的差异和优缺点。</li><li>论文作者在介绍过程中提供了大量的代码示例和详细的解释，使读者更容易理解和应用所学知识。</li></ul><h3 id="方法创新点">方法创新点</h3><p>该论文的方法创新点在于，通过对已有分解器的比较，提出了一些改进和完善的想法，例如可以将ENRRequest和ENRResponse添加到C dissector中，以便更好地支持新版本的DiscoveryV4协议。此外，该论文还提出了一个基于用户界面的演示应用程序，可以帮助用户更直观地观察和理解以太坊网络中的数据传输过程。</p><h3 id="未来展望">未来展望</h3><p>随着以太坊网络的发展和技术的进步，未来的展望包括：</p><ul><li>进一步完善已有的分解器，使其能够更好地支持新的协议和功能。</li><li>开发更加高效和智能的分解器，能够自动识别和解析更多的数据包类型和协议。</li><li>利用机器学习和人工智能技术，实现对以太坊网络数据的自动化分析和预测，为用户提供更好的服务和支持。</li></ul><hr><h1>附1：实现方式</h1><h3 id="项目概述">项目概述</h3><p>该项目通过构建一个自定义的 Docker 网络环境来模拟以太坊节点之间的通信，并使用 Wireshark 和自定义的 Lua 解析器插件来捕获和分析这些通信。具体来说，它包括以下组件：</p><ul><li><strong>Go-Ethereum (Geth) 定制源代码</strong>：用于暴露私有会话密钥。</li><li><strong>Docker 环境</strong>：包含多个 Geth 节点和一个路由器容器，用于模拟小型私有以太坊网络。</li><li><strong>Lua 解析器插件</strong>：用于在 Wireshark 中解剖 DEVP2P 协议的数据包。</li><li><strong>PYDEVP2P 库</strong>：用于 Python 和 Lua 之间的交互。</li></ul><h3 id="操作与实现步骤">操作与实现步骤</h3><h4 id="1-环境设置">1. 环境设置</h4><p>确保安装了必要的软件和库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br><span class="line">sudo apt-get install lua5.2 liblua5.2-dev wireshark python3.10</span><br></pre></td></tr></table></figure><h4 id="2-设置-Lunatic-Python-桥接">2. 设置 Lunatic-Python 桥接</h4><p>Lunatic-Python 是一个双向桥接库，允许 Lua 和 Python 之间的交互。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆 Lunatic-Python 仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/lunatic-python.git</span><br><span class="line"><span class="built_in">cd</span> lunatic-python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 确保 Lua 5.3 已安装</span></span><br><span class="line">lua5.3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找 Python 版本</span></span><br><span class="line">ldconfig -p | grep python</span><br><span class="line"></span><br><span class="line"><span class="comment"># 准备构建</span></span><br><span class="line">cmake -B./build -H. -DPYTHON_INCLUDE_DIR=/usr/include/python3.10 \</span><br><span class="line">  -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.10.so</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建</span></span><br><span class="line">cmake --build ./build</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制生成的库文件到 Lua 目录</span></span><br><span class="line">sudo <span class="built_in">chmod</span> +x build/bin/python.so</span><br><span class="line">sudo <span class="built_in">cp</span> build/bin/python.so /usr/local/lib/lua/5.2/</span><br></pre></td></tr></table></figure><h4 id="3-克隆并安装-LUA-Dissector-和-PYDEVP2P">3. 克隆并安装 LUA Dissector 和 PYDEVP2P</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆 LUA Dissector 和 PYDEVP2P</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/lua-devp2p-wireshark-dissector.git</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/pydevp2p.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 PYDEVP2P PIP 包</span></span><br><span class="line"><span class="built_in">cd</span> pydevp2p</span><br><span class="line">pip install -e .</span><br><span class="line">sudo pip install -e .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Wireshark 插件目录（如果不存在）</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.local/lib/wireshark/plugins</span><br><span class="line"></span><br><span class="line"><span class="comment"># 符号链接或复制 .lua 解析器文件（也可以直接复制到该目录</span></span><br><span class="line">sudo <span class="built_in">ln</span> -s &lt;location_of_cloned_dissector&gt;/rlpx.lua ~/.local/lib/wireshark/plugins/rlpx.lua</span><br><span class="line">sudo <span class="built_in">ln</span> -s &lt;location_of_cloned_dissector&gt;/discovery.lua ~/.local/lib/wireshark/plugins/discovery.lua</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于 root 用户（如果使用 sudo 运行 Wireshark）（也可以直接复制到该目录</span></span><br><span class="line">sudo <span class="built_in">mkdir</span> -p /usr/local/lib/wireshark/plugins</span><br><span class="line">sudo <span class="built_in">ln</span> -s &lt;location_of_cloned_dissector克隆的地址&gt;/rlpx.lua /usr/local/lib/wireshark/plugins/rlpx.lua</span><br><span class="line">sudo <span class="built_in">ln</span> -s &lt;location_of_cloned_dissector克隆的地址&gt;/discovery.lua /usr/local/lib/wireshark/plugins/discovery.lua</span><br></pre></td></tr></table></figure><ul><li><p><strong>使用本地 <code>.pcapng</code> 文件测试</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wireshark-r final.pcapng</span><br></pre></td></tr></table></figure><p>这将运行 Wireshark 并加载捕获的 <code>.pcapng</code> 文件。您可以查看解剖后的 DEVP2P 数据包。</p></li><li><p><strong>实时捕获网络流量</strong>：</p><ul><li>启动 Wireshark 并选择适当的接口捕获数据包。</li><li>观察和分析捕获的数据包，特别是 RLPx 握手和 DiscoveryV5 数据包。</li><li></li></ul></li></ul><h4 id="4-构建-Docker-环境">4. 构建 Docker 环境</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆 GETH-Docker 仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/geth-docker.git</span><br><span class="line"><span class="built_in">cd</span> geth-docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建自定义 Docker 镜像</span></span><br><span class="line">./build-dockers.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动路由器容器</span></span><br><span class="line">docker-compose up -d bridge-router</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 Wireshark 并附加到 10.1.0.1 或任何 10.1.X.X 网络</span></span><br><span class="line">sudo wireshark</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动每个 GETH 节点/客户端容器</span></span><br><span class="line">docker-compose up -d geth-ubuntu-bootnode</span><br><span class="line">docker-compose up -d geth-client-1</span><br><span class="line">docker-compose up -d geth-client-2</span><br><span class="line">docker-compose up -d geth-client-3</span><br></pre></td></tr></table></figure><h4 id="5-安装编译和运行自定义的-Go-Ethereum-客户端：">5.安装编译和运行自定义的 Go Ethereum 客户端：</h4><h5 id="1-克隆自定义的-Go-Ethereum-源代码">1. 克隆自定义的 Go Ethereum 源代码</h5><p>首先，你需要克隆自定义的 Go Ethereum 源代码仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jmkemp20/go-ethereum.git</span><br></pre></td></tr></table></figure><h5 id="2-安装-Geth-或所有-Go-Ethereum-工具">2. 安装 Geth 或所有 Go Ethereum 工具</h5><p>进入克隆的 <code>go-ethereum</code> 目录，并编译 <code>geth</code> 或所有工具。</p><h5 id="安装-Go-1-20">安装 Go 1.20</h5><p>确保你已经安装了 Go 1.20 或更高版本。如果没有，请按照以下步骤安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载 Go 1.20</span></span><br><span class="line">wget https://mirrors.aliyun.com/golang/go1.20.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压并安装</span></span><br><span class="line">sudo tar -C /usr/local -xzf go1.20.6.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置环境变量</span></span><br><span class="line">nano ~/.bashrc</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">nano ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> GOROOT=/usr/local/go</span><br><span class="line"><span class="built_in">export</span> GOPATH=<span class="variable">$HOME</span>/go</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$GOPATH</span>/bin:<span class="variable">$GOROOT</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证 Go 版本</span></span><br><span class="line">go version</span><br></pre></td></tr></table></figure><h5 id="编译-geth-或所有工具">编译 <code>geth</code> 或所有工具</h5><p>进入 <code>go-ethereum</code> 目录并编译 <code>geth</code> 或所有工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> go-ethereum</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清理 Go 模块缓存</span></span><br><span class="line">go clean -modcache</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新 Go 模块</span></span><br><span class="line">go mod tidy</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译 geth</span></span><br><span class="line">make geth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你想编译所有工具</span></span><br><span class="line">make all</span><br></pre></td></tr></table></figure><h5 id="3-运行-Geth">3. 运行 Geth</h5><p>编译完成后，你可以运行 <code>geth</code>。确保 <code>geth</code> 可执行文件在你的 <code>PATH</code> 中，或者直接在 <code>go-ethereum/build/bin</code> 目录下运行它。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果 geth 在 PATH 中</span></span><br><span class="line">geth</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果 geth 不在 PATH 中</span></span><br><span class="line">./build/bin/geth</span><br></pre></td></tr></table></figure><p>成功安装并运行自定义的 Go Ethereum 客户端</p><h3 id="项目结构">项目结构</h3><ul><li><strong>Dockerfile</strong>：用于构建 Docker 镜像的配置文件。</li><li><strong>docker-compose.yml</strong>：用于启动和管理 Docker 容器。</li><li><strong>lua-devp2p-wireshark-dissector</strong>：Lua 解析器插件，用于在 Wireshark 中解剖 DEVP2P 数据包。</li><li><strong>pydevp2p</strong>：Python 库，用于处理以太坊 DEVP2P 协议中的 ECIES 和其他加密操作。</li><li><strong>lunatic-python</strong>：Lua 和 Python 之间的桥接库。</li></ul><h3 id="总结-2">总结</h3><p>通过上述步骤，设置并运行一个自定义的 Docker 环境来模拟以太坊节点之间的通信，并使用 Wireshark 和自定义的 Lua 解析器插件来捕获和分析这些通信。有助于进行安全分析和教育，深入理解以太坊网络的工作原理。</p><h1>附2：原文翻译（结论篇）</h1><h3 id="6-1-引言和回顾">6.1 引言和回顾</h3><p>本论文提出了一种为以太坊的 DEVP2P 点对点协议套件创建 Wireshark 剖析器的新方法，包括带有 ETH 和 SNAP 子协议的 DiscoveryV4、DiscoveryV5 和 RLPx。正如我们所讨论的，以太坊网络促进了以太坊网络节点之间的相互通信，为去中心化的应用程序和账户提供了便利。因此，为了满足创建支持 RLP 解码和 ECIES 解密的 Wireshark 剖析器插件的要求，涵盖了许多贡献。首先，讨论了利用自定义的 Go Ethereum 源创建一个私有的 Ethereum docker 网络。接下来，介绍了 LUA Wireshark 插件的实际实现;首先是支持 DEVP2P 发现协议的 “discovery.lua” 插件，然后是 “rlpx.lua”，它允许剖析 RLPx，包括 ETH 和 SNAP 子协议。然后，我们深入研究了 PYDEVP2P，这是一个基于 python 的最小第三方依赖库，为 RLP 解码、ECIES 解密和解剖辅助函数提供了工具。最后，利用剖析器和PYDEVP2P分析了椭圆曲线数字签名算法 （ECDSA） 椭圆曲线 Diffie-Hellman 背后的技术细节。</p><p>Wireshark 是一种广泛使用的网络分析工具，允许用户检查和解码网络数据包。但是，Wireshark 本身不支持以太坊的 DEVP2P 协议，这限制了研究人员和开发人员监控和理解以太坊节点行为的能力。最重要的是，Wireshark 支持使用解剖插件，这些插件是 Wireshark 解剖功能的插件。正如我们所讨论的，当前由 BCSEC Org 和 ConsenSys 提供的两个剖析器插件并不完全支持 DiscoveryV4 的最新消息结构，并且对 DiscoveryV5 和 RLPx 的支持为零。为了解决这一差距，本论文在 LUA 中开发了一个自定义 Wireshark 剖析器插件，该插件可以以用户友好的格式解析和显示 DEVP2P 数据包。该插件利用 PYDEVP2P，这是一个基于 python 的库，用于协助解码 RLP（递归长度前缀）和解密 DEVP2P 协议使用的 ECIES（椭圆曲线集成加密方案）。</p><p>此外，本论文还创建了一个具有自定义 Go Ethereum 映像的私有 docker 网络，该网络可生成真实的 DEVP2P 流量，用于开发、测试和分析目的。使用这个剖析器插件和环境，本论文演示了 Wireshark 剖析器如何分析 DEVP2P 数据包流的各个方面，例如跟踪交易在整个网络中的传播、分析 DiscoveryV4 椭圆曲线数字签名算法 （ECDSA） 和 DiscoveryV5 对椭圆曲线 Diffie-Hellman （ECDH） 的使用。本论文为研究以太坊的点对点通信层和增强去中心化应用程序的透明度和安全性提供了实用工具，为区块链研究领域、以太坊社区成员和教育工作者做出了贡献。</p><h4 id="6-2-解剖和分析结果">6.2 解剖和分析结果</h4><p>本论文介绍了 Wireshark 剖析器插件的设计和实现，用于剖析 DEVP2P 的 DiscoveryV4、DiscoveryV5 和 RLPx 协议。剖析器插件可以解码和显示以太坊节点之间交换的各种消息，这些消息要么是实时网络，要么是事后捕获数据包。此外，剖析器插件还支持使用从握手过程中派生的会话密钥来解码 DiscoveryV5 和 RLPx 消息。</p><p>创建剖析器的过程和剖析器的众多功能在第 4 章中展示。具体来说，DEVP2P 剖析器支持在 DiscoveryV4 中找到的所有消息，如第 4.3.1 章所述，包括 Ping、Pong、FindNode、Neighbors、ENRRequest 和 ENRResponse。由于新的“enr-seq”字段，以前的剖析器（包括 BSECORG 的 LUA 剖析器插件和 ConsenSys 的 C 剖析器）无法完全剖析 Ping 和 Pong 消息的较新消息架构。这些以前的剖析器也不支持 EIP-868 中描述的最新 ENRRequest 和 ENRResponse 数据包，这些数据包已于 2019 年 10 月添加到协议中。</p><p>接下来，新的剖析器支持第 4.3.2 章中讨论的 DiscoveryV5 的最新实现，包括 Ping、Pong、FindNode、Nodes、TalkReq 和 TalkResp。以前的剖析器不支持此功能，因为协议的性质会混淆数据包标头信息和 ECDH 握手以交换会话密钥以进行加密通信。但是，这种新的 DEVP2P 剖析器提供了维护在网络上的已知节点之间创建的会话的所有功能，从而无缝解密和破译捕获的网络数据。</p><p>DEVP2P 剖析器插件可以分析和破译 RLPx 促进的以太坊节点之间经过身份验证和加密的通信。这包括使用 AuthInit 和 AuthAck RLPx 消息在节点之间创建会话密钥的握手过程，然后是内置的 RLPx 功能“P2P”Hello 消息，如第 4.4 章所示。剖析器支持其他 RLPx P2P 消息、Ping、Pong 和 Disconnect。由于 RLPx 用作多种功能的 TCP 传输，因此剖析器可以解码、解密和剖析 RLPx 下的两个主要子协议或功能 ETH 和 SNAP。这些协议支持区块传播、链同步和交易，然后是状态管理和 SNAP 同步。剖析器支持 2 条 RLPx 握手消息、4 条 RLPx P2P 消息、13 条 ETH 功能消息和 6 条 SNAP 功能消息。</p><p>关于区块链状态和交易的 Connected Peer 节点。剖析器还可以显示消息格式的详细信息，例如 RLP 编码和解码、数据包标头和尾部以及消息类型和内容。该工具允许轻松访问 DEVP2P 的内部工作原理，并为研究人员、一般区块链社区和类似领域的教育工作者提供帮助。</p><h4 id="6-3-限制与未来工作">6.3 限制与未来工作</h4><p>剖析器是对以太坊网络分析的新颖贡献，因为它是第一个在统一且用户友好的界面中剖析所有三种 DEVP2P 协议的工具。剖析器可以帮助研究人员和开发人员了解 Ethereum 网络的行为和性能，并识别和缓解潜在的安全威胁。剖析器还可以通过使椭圆曲线密码学在实际应用中更易于访问来帮助教育工作者，同时帮助开发和测试以太坊网络的新协议或功能，同时提供可靠的</p><p>为未来改进和扩展对现有协议的支持奠定了基础。</p><p>但是，剖析器也有一些局限性和缺点，必须在未来的工作中解决：</p><p>剖析器需要自定义 Go Ethereum 源代码，其中包括每个节点在 RLPx 握手期间生成的随机私钥，用于会话密钥共享和后续数据包的加密。剖析器不支持使用官方 GETH 或 Ethereum 客户端进行 RLPx 剖读。</p><p>剖析需要 Python 配合 PYDEVP2P 使用， 在幕后处理剖析、解码和解密的主要逻辑。这增加了剖析器设置和执行的复杂性和开销，需要安装 Python PIP 包的 PYDEVP2P 以及 LUA 和 Lunatic-Python 桥。</p><p>剖析器存在不完整的消息错误，当某些消息大于特定大小时，会导致它们被截断或跳过。此错误会影响捕获握手数据包或格式错误的数据包时剖分结果的准确性和完整性。</p><p>剖析器不会在 Wireshark 显示屏上以清晰的人类可读格式显示 DiscoveryV5 消息的未屏蔽“authdata”，其中包含节点 ID、签名和临时公钥等基本信息。</p><p>随着以太坊及其底层网络的复杂性不断增长并随着时间的推移而发展，未来工作可能会有一些可能的改进或扩展：</p><p>在权益证明环境中使用剖析器，查看权益证明共识算法网络中的执行客户端中使用了哪些 DEVP2P 协议和消息。看看哪些 DEVP2P RLPx 功能消息被新协议改编或未使用，以进行权益证明，这将是一件有趣的事情。</p><p>剖析 LIBP2P 并将其与 DEVP2P 进行比较。LIBP2P 是以太坊共识客户端使用的另一个点对点网络堆栈。在功能、性能和安全性方面对 LIBP2P 和 DEVP2P 进行比较和对比会很有用。</p><p>添加 LES、PIP、WIP 和其他 RLPx 子协议的剖析。剖析器目前仅支持 ETH 和 SNAP 子协议。这些其他子协议用于不同的目的，例如轻以太坊子协议 （LES） 支持、奇偶校验轻协议 （PIP） 支持和以太坊见证协议 （WIT）。剖析器也应该扩展以支持这些子协议。</p><p>调查网络发现泄漏，这是 DiscoveryV4 中发现的问题。网络发现泄漏是一个问题，即为特定链/网络 ID 设置的 Ethereum 节点会错误地通信并发现其他 Ethereum 网络上的节点。</p><p>实施 DiscoveryV4 和 DiscoveryV5 拒绝服务 （DoS） 攻击。DiscoveryV4 协议容易受到拒绝服务 （DoS） 攻击，这些攻击可能会用虚假的 ping 或 pong 消息淹没节点。这些消息会消耗节点的带宽和处理资源，并可能阻止它们响应合法消息。剖析器可以通过捕获网络上的此类恶意数据包来帮助检测和监控此类攻击。</p><p>实施 RLPx 已知明文攻击。RLPx 协议使用 AES-CTR 加密，每条消息使用固定的 IV（初始化向量）。这使得它容易受到已知的明文攻击，如果攻击者知道一些明文-密文对，该攻击可以恢复加密密钥。剖析器可以通过随机化每条消息的 IV 或使用不同的加密方案来帮助避免这种攻击。</p><p>执行 Wireshark 统计分析。Wireshark 提供各种统计网络流量分析工具，例如图形、图表、表格、过滤器等。剖析器可以利用这些工具对 DEVP2P 协议进行更高级和全面的分析，例如吞吐量、延迟、数据包丢失、消息分发、节点行为等。</p><h4 id="6-4-最后的思考">6.4 最后的思考</h4><p>解剖器的设计、实现及其结果的分析证明了它对社区、教育工作者、开发者和研究者的有用性。LUA Wireshark 解析插件和 PYDEVP2P 库为教育工作者、研究人员及开发者提供了理解以太坊网络内部运作所需的所有工具。该解析器还允许可视化流行的密码学概念，利用椭圆曲线密码学（ECC），同时帮助理解递归长度前缀（RLP）编码的工作方式。在创建此解析器的过程中克服了许多障碍，无论是更新文档还是实现以太坊特有的ECIES技术细节。本文档中穿插的大多数技术细节直接来自以太坊DEVP2P GitHub规范页面以及最常用的执行客户端源代码Go Ethereum。因此，这些方法对于更广泛的以太坊社区成员、分析师尤其是教育者来说并不容易获得。</p><p>本文讨论的贡献使得进入以太坊节点网络通信变得更加容易，并且克服了由大型区块链技术解决方案公司ConsenSys指出的一些障碍。这包括可以使用单个命令启动一个完整的私有以太坊网络的Go Ethereum Docker网络，随后是只需几个简单步骤即可安装的LUA Wireshark插件和PYDEVP2P库。正如所讨论的那样，PYDEVP2P库还提供了易于理解的椭圆曲线加密实现，让教育工作者和学生能够在一个实际环境中亲身体验并理解这些底层概念。</p><p>本文档的主要目标是提供所有必要的工具来支持未来的改进，为教育者提供一种轻松访问的工具来展示ECIES密码技术，同时也为了安全分析师能够进一步增强点对点区块链网络的健壮性。</p>]]></content>
    
    
    <summary type="html">一种新的网络包解码器（dissector），用于分析以太坊DEVP2P协议套件中的数据包。</summary>
    
    
    
    <category term="笔记" scheme="https://zhongye1.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
